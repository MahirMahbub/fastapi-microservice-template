version: '3'

services:
  auth_rabbitmq:
    hostname: "auth_rabbitmq"
    container_name: "auth_rabbitmq"
    image: "rabbitmq:3-management"
    env_file:
      - auth-rabbitmq.env
    networks:
      - auth_network
    ports:
      - "4369:4369"
      - "5672:5672"
      - "25672:25672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://auth_rabbitmq:15672" ]
      interval: 30s
      timeout: 20s
      retries: 5
    volumes:
      - auth_rabbitmq_data:/var/lib/rabbitmq/
      - ./volume/auth_rabbitmq_data:/var/lib/rabbitmq/
    restart: on-failure

  auth_redis:
    hostname: "auth_redis"
    container_name: "auth_redis"
    image: "redis:latest"
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    env_file:
      - auth-redis.env
    networks:
      - auth_network
      - skill_management_network
    ports:
      - "6379:6379"
    restart: on-failure
    volumes:
      - auth_redis_data:/data
      - ./volume/auth_redis_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - auth_rabbitmq

#  auth_mongodb:
#    container_name: auth_mongodb
#    image: bitnami/mongodb:latest
#    ports:
#      - "27017:27017"
#    volumes:
#      - auth_mongodb_data:/mongodb
#      - ./volume/mongodb-persistence:/mongodb
#    networks:
#      - auth_network

  skill_management_mongodb:
    container_name: skill_management_mongodb
    image: bitnami/mongodb:latest
    ports:
      - "27017:27017"
    volumes:
      - skill_management_mongodb_data:/mongodb
      - ./volume/mongodb-persistence_skill:/mongodb
    networks:
      - skill_management_network
      - auth_network

  skill_management:
    build:
      context: ./skill_management
      dockerfile: SkillDockerfile
    container_name: "skill_management"
    hostname: "skill_management"
    command: bash -c "uvicorn skill_management.main:skill_app --host 0.0.0.0 --port 7004 --reload"
    volumes:
      - ./:/skill_management
    ports:
      - "7004:7004"
    env_file: skill_management/.env
    networks:
      - skill_management_network
    restart: always
    depends_on:
      - skill_management_mongodb
      - auth_redis

  auth_management:
    build:
      context: ./auth_management
      dockerfile: AuthDockerfile
    container_name: "auth_management"
    hostname: "auth_management"
    command: bash -c "uvicorn auth_management.main:auth_app --host 0.0.0.0 --port 7003  --reload"
    volumes:
      - ./:/auth_management
    ports:
      - "7003:7003"
    env_file: auth_management/.env
    networks:
      - auth_network
    restart: always
    depends_on:
      - email_worker
      - auth_rabbitmq
      - auth_redis
#      - auth_mongodb

  auth_celery_flower:
    container_name: "auth_celery_flower"
    image: mher/flower:1.2
    restart: on-failure
    env_file:
      - auth-celery-flower.env
    ports:
      - "5557:5555"
    depends_on:
      - auth_rabbitmq
      - auth_redis
      - email_worker
    networks:
      - auth_network
    volumes:
      - auth_flower_data:/data
      - ./volume/auth_flower_data:/data
  email_worker:
    hostname: "email_worker"
    container_name: "email_worker"
    build:
      context: ./auth_management
      dockerfile: AuthDockerfile
    command: "celery -A auth_management.utils.tasks.celery worker -n email-worker --loglevel=info --logfile=auth_management/logs/email_worker.logs -Q send_verify_email,send_change_password_email"
    env_file: email-worker.env
    volumes:
      - ./:/auth_management
    links:
      - auth_rabbitmq
    depends_on:
      - auth_rabbitmq
      - auth_redis
    networks:
      - auth_network
    restart: on-failure

volumes:
  auth_rabbitmq_data:
  auth_redis_data:
  auth_flower_data:
  skill_management:
  skill_management_mongodb_data:
  #  auth_mongodb_data:
networks:
  auth_network:
    driver: bridge
  skill_management_network:
    driver: bridge