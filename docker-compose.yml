version: '3'

services:
  rabbitmq:
    hostname: "rabbitmq"
    container_name: "rabbitmq"
    image: "bitnami/rabbitmq:latest"
    networks:
      - share-network
    ports:
      - "4369:4369"
      - "5672:5672"
      - "25672:25672"
      - "15672:15672"
    volumes:
      - "rabbitmq_data:/bitnami"

  redis:
    container_name: "redis"
    image: "bitnami/redis:5.0.4"
    environment:
      - REDIS_PASSWORD=password123
    networks:
      - share-network
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/bitnami/redis/data"

  auth:
    build:
      context: ./auth_app
      dockerfile: Dockerfile
    container_name: Authentication
    command: 'bash -c "uvicorn auth_app.main:auth_app --host 0.0.0.0 --port 7003 --reload"'
    volumes:
      - '.:/auth_app'
    ports:
      - '7003:7003'
    env_file: auth_app/.env
    networks:
      - share-network
    restart: "always"
#    depends_on:
#      - mongodb_auth

  celery-flower:
    container_name: "celery-flower"
    image: gregsi/latest-celery-flower-docker:latest
    environment:
      - AMQP_USERNAME=user
      - AMQP_PASSWORD=bitnami
      - AMQP_ADMIN_USERNAME=user
      - AMQP_ADMIN_PASSWORD=bitnami
      - AMQP_HOST=rabbitmq
      - AMQP_PORT=5672
      - AMQP_ADMIN_HOST=rabbitmq
      - AMQP_ADMIN_PORT=15672
      - FLOWER_BASIC_AUTH=user:test
    ports:
      - "5556:5555"
    depends_on:
      - rabbitmq
      - redis
    networks:
      - share-network
  worker:
    hostname: "worker"
    container_name: "worker"
    build:
      context: ./auth_app
      dockerfile: Dockerfile
    command: "celery -A auth_app.utils.tasks.celery worker --loglevel=info -Q send_auth_email"
    env_file: worker.env
    volumes:
      - '.:/auth_app'
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
      - redis
    networks:
      - share-network

#  mongodb_auth:
##    image: mongo:latest
#    container_name: mongodb_auth
#    image: bitnami/mongodb:latest
#    ports:
#      - "27017:27017"
#    volumes:
#      - data:/bitnami/mongodb
#    networks:
#      - share-network
volumes:
  data:
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local
networks:
  share-network:
    driver: bridge