version: '3'

services:
  auth_rabbitmq:
    hostname: "auth_rabbitmq"
    container_name: "auth_rabbitmq"
    image: "rabbitmq:3-management"
    env_file:
      - auth-rabbitmq.env
    networks:
      - auth_network
    ports:
#      - "4369:4369"
#      - "5672:5672"
#      - "25672:25672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://auth_rabbitmq:15672" ]
      interval: 30s
      timeout: 20s
      retries: 5
    volumes:
      - auth_rabbitmq_data:/var/lib/rabbitmq/
    restart: on-failure

  auth_redis:
    hostname: "auth_redis"
    container_name: "auth_redis"
    image: "redis:latest"
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    env_file:
      - auth-redis.env
    networks:
      - auth_network
#    ports:
#      - "6379:6379"
    restart: on-failure
    volumes:
      - auth_redis_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - auth_rabbitmq

  auth:
    build:
      context: ./auth_app
      dockerfile: Dockerfile
    container_name: "auth"
    hostname: "auth"
    command: bash -c "uvicorn auth_app.main:auth_app --host 0.0.0.0 --port 7003 --log-config=auth_app/logging.conf  --reload"
    volumes:
      - ./:/auth_app
#    ports:
#      - '7003:7003'
    env_file: auth_app/.env
    networks:
      - auth_network
    restart: on-failure
    depends_on:
      - email_worker
      - auth_rabbitmq
      - auth_redis
#    depends_on:
#      - mongodb_auth

  auth_celery_flower:
    container_name: "auth_celery_flower"
    image: mher/flower:1.2
#    build:
#      context: ./auth_app
#      dockerfile: Dockerfile
#    command:
#      - celery -A auth_app.utils.tasks.celery flower
    restart: on-failure
    env_file:
      - auth-celery-flower.env
    ports:
      - "5556:5555"
    depends_on:
      - auth_rabbitmq
      - auth_redis
      - email_worker
    networks:
      - auth_network
    volumes:
      - auth_flower_data:/data
  email_worker:
    hostname: "email_worker"
    container_name: "email_worker"
    build:
      context: ./auth_app
      dockerfile: Dockerfile
    command: "celery -A auth_app.utils.tasks.celery worker -n email-worker --loglevel=info --logfile=auth_app/logs/email_worker.log -Q send_verify_email,send_change_password_email"
    env_file: email-worker.env
    volumes:
      - './:/auth_app'
    links:
      - auth_rabbitmq
    depends_on:
      - auth_rabbitmq
      - auth_redis
    networks:
      - auth_network
    restart: on-failure

  nginx:
    container_name: "nginx"
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx_config.conf:/etc/nginx/conf.d/nginx_config.conf
#    depends_on:
#      - auth
#      - auth_rabbitmq
    networks:
      - auth_network
volumes:
  auth_rabbitmq_data:
  auth_redis_data:
  auth_flower_data:
networks:
  auth_network:
    driver: bridge