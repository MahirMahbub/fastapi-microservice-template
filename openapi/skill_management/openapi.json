{"openapi": "3.0.2", "info": {"title": "SkillManagementApp", "description": "Skill Management Application", "version": "1.0.0"}, "paths": {"/api/v1/profile/plans": {"post": {"tags": ["plan"], "summary": "Create Plan By User", "description": "**Create:** must provide *\"skill_id\"*, *\"start_date\"*, *\"end_date\"*, *\"plan_type\"* for creating a plan.\n\n**Update:** must provide *\"plan_id\"* for plan update and *\"task_id\"* for task update. Others are optional.", "operationId": "create_plan_by_user_api_v1_profile_plans_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PlanCreateRequest"}, "examples": {"CREATE": {"summary": "Create Body", "description": "a example of body for create operation", "value": {"plan_type": 1, "notes": "It is a note for the planning", "skill_id": 1, "status": 1, "start_date": "2022-11-24T11:59:28.549417+00:00", "end_date": "2022-11-25T11:59:28.549421+00:00", "task": [{"description": "It is a task for the planning", "status": 1}]}}, "UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"plan_id": "954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0", "plan_type": 1, "notes": "It is a note for the planning", "skill_id": 1, "start_date": "2022-11-24T11:59:28.549417+00:00", "end_date": "2022-11-25T11:59:28.549421+00:00", "delete_tasks": [2], "status": 1, "task": [{"description": "It is a task for the planning", "status": 2}]}}}}}, "required": true}, "responses": {"201": {"description": "The plan is successfully created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PlanCreateResponse"}}}}, "400": {"description": "The plan is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/admin/profile/plans": {"post": {"tags": ["plan"], "summary": "Create Plan By Admin", "description": "**Create:** must provide *\"skill_id\"*, *\"profile_id\"*, *\"start_date\"*, *\"end_date\"*, *\"plan_type\"* for creating a plan.\n\n**Update:** must provide *\"plan_id\"* and *\"profile_id\"* for plan update and *\"task_id\"* for task update. Others are optional.", "operationId": "create_plan_by_admin_api_v1_admin_profile_plans_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PlanCreateAdminRequest"}, "examples": {"CREATE": {"summary": "Create Body", "description": "a example of body for create operation", "value": {"profile_id": "4807bd1c-fe07-4ee3-9145-569533119e88", "plan_type": 1, "notes": "It is a note for the planning", "skill_id": 1, "status": 1, "start_date": "2022-11-24T11:59:28.549417+00:00", "end_date": "2022-11-25T11:59:28.549421+00:00", "task": [{"description": "It is a task for the planning", "status": 1}]}}, "UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"profile_id": "5839c614-de15-4384-8a40-9e04ed74ba58", "plan_id": "954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0", "plan_type": 1, "notes": "It is a note for the planning", "skill_id": 1, "start_date": "2022-11-24T11:59:28.549417+00:00", "end_date": "2022-11-25T11:59:28.549421+00:00", "delete_tasks": [2], "status": 1, "task": [{"description": "It is a task for the planning", "status": 2}]}}}}}, "required": true}, "responses": {"201": {"description": "The plan is successfully created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PlanCreateResponse"}}}}, "400": {"description": "The plan is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/profile/admin/user-profiles/{profile_id}/plans": {"get": {"tags": ["plan"], "summary": "Get Profile Plans By Admin", "operationId": "get_profile_plans_by_admin_api_v1_profile_admin_user_profiles__profile_id__plans_get", "parameters": [{"description": "input profile id of the user", "required": true, "schema": {"title": "Profile Id", "type": "string", "description": "input profile id of the user", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "profile_id", "in": "path"}], "responses": {"200": {"description": "The skills requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PlanListDataResponse"}}}}, "404": {"description": "The skills details are not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/user-profiles/plans": {"get": {"tags": ["plan"], "summary": "Get Profile Plans By User", "operationId": "get_profile_plans_by_user_api_v1_profile_user_profiles_plans_get", "responses": {"200": {"description": "The educations requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PlanListDataResponse"}}}}, "404": {"description": "The educations details are not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/profile/skills": {"post": {"tags": ["skill"], "summary": "Create Skill", "description": "**Create:** Must provide all the data necessary including *\"skill_id\"* for creating a new skill. *\"status\"* is optional.\n\n\n**Update:** For update purposes provide *\"skill_id\"*. Other attributes are optional.", "operationId": "create_skill_api_v1_profile_skills_post", "requestBody": {"content": {"application/json": {"schema": {"title": "Skill", "allOf": [{"$ref": "#/components/schemas/CreateSkillDataRequest"}], "description": "provide all required attributes to create a new skill"}, "examples": {"CREATE": {"summary": "Create Body", "description": "a example of body for create operation", "value": {"skill_id": 1, "experience_year": 4, "number_of_projects": 4, "level": 5, "training_duration": 2, "achievements": "1", "achievements_description": "It is the achievement's description", "certificate": "1"}}, "UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"skill_id": 1, "experience_year": 4, "number_of_projects": 4, "level": 5, "training_duration": 2, "achievements": "1", "achievements_description": "It is the achievement's description", "certificate": "1", "status": 2}}}}}, "required": true}, "responses": {"201": {"description": "The skill is successfully created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateSkillListDataResponse"}}}}, "400": {"description": "The skill is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/admin/profile/skills": {"post": {"tags": ["skill"], "summary": "Create Skill By Admin", "description": "**Create:** Must provide all the data necessary including *\"skill_id\"* for creating a new skill. *\"status\"* is optional.\n\n\n**Update:** For update purposes provide *\"skill_id\"*. Other attributes are optional.", "operationId": "create_skill_by_admin_api_v1_admin_profile_skills_post", "requestBody": {"content": {"application/json": {"schema": {"title": "Skill Request", "allOf": [{"$ref": "#/components/schemas/CreateSkillDataAdminRequest"}], "description": "provide all required attributes to create a new skill"}, "examples": {"CREATE": {"summary": "Create Body", "description": "a example of body for create operation", "value": {"profile_id": "bdd2c270-30c2-4ba7-9d0c-22651ab5dc25", "skill_id": 1, "experience_year": 4, "number_of_projects": 4, "level": 5, "training_duration": 2, "achievements": "1", "achievements_description": "It is the achievement's description", "certificate": "1"}}, "UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"profile_id": "e9978027-1950-4701-9615-071690145280", "skill_id": 1, "experience_year": 4, "number_of_projects": 4, "level": 5, "training_duration": 2, "achievements": "1", "achievements_description": "It is the achievement's description", "certificate": "1", "status": 2}}}}}, "required": true}, "responses": {"201": {"description": "The skill is successfully created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateSkillListDataResponse"}}}}, "400": {"description": "The skill is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/skills/{skill_id}/upload-certificate": {"post": {"tags": ["skill"], "summary": "Upload Certificate", "operationId": "upload_certificate_api_v1_profile_skills__skill_id__upload_certificate_post", "parameters": [{"description": "provide the skill id", "required": true, "schema": {"title": "Skill Id", "type": "integer", "description": "provide the skill id"}, "name": "skill_id", "in": "path"}], "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_upload_certificate_api_v1_profile_skills__skill_id__upload_certificate_post"}}}}, "responses": {"201": {"description": "The certificates are successfully uploaded", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SkillCertificateResponse"}}}}, "400": {"description": "The certificates are not uploaded", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/skills/{skill-id}": {"get": {"tags": ["skill"], "summary": "Get Skill", "operationId": "get_skill_api_v1_skills__skill_id__get", "parameters": [{"description": "provide skill id to get skill information", "required": true, "schema": {"title": "Skill-Id", "type": "integer", "description": "provide skill id to get skill information"}, "name": "skill-id", "in": "path"}], "responses": {"200": {"description": "The skill requested by id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetSkillDataResponse"}}}}, "404": {"description": "The skill details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/skills": {"get": {"tags": ["skill"], "summary": "Get Skill List", "operationId": "get_skill_list_api_v1_skills_get", "parameters": [{"description": "input skill category as string\n                                                                          \n    frontend: 1, backend: 2, devops: 3, qa: 4, database: 5, network: 6, fullstack: 7", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/SkillCategoryEnum"}], "description": "input skill category as string\n                                                                          \n    frontend: 1, backend: 2, devops: 3, qa: 4, database: 5, network: 6, fullstack: 7"}, "name": "skill-category", "in": "query"}, {"description": "input skill name as string", "required": false, "schema": {"title": "Skill-Name", "type": "string", "description": "input skill name as string"}, "name": "skill-name", "in": "query"}], "responses": {"200": {"description": "The skill list requested", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetSkillDataResponseList"}}}}, "404": {"description": "The skill list is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/profile/admin/user-profiles/{profile_id}/skills": {"get": {"tags": ["skill"], "summary": "Get Profile Skills By Admin", "operationId": "get_profile_skills_by_admin_api_v1_profile_admin_user_profiles__profile_id__skills_get", "parameters": [{"description": "input profile id of the user", "required": true, "schema": {"title": "Profile Id", "type": "string", "description": "input profile id of the user", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "profile_id", "in": "path"}], "responses": {"200": {"description": "The skills requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileSkillDetailsResponse"}}}}, "404": {"description": "The skills details are not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/user-profiles/skills": {"get": {"tags": ["skill"], "summary": "Get Profile Skills By User", "operationId": "get_profile_skills_by_user_api_v1_profile_user_profiles_skills_get", "responses": {"200": {"description": "The skills requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileSkillDetailsResponse"}}}}, "404": {"description": "The skills details are not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/admin/profiles/": {"get": {"tags": ["profile"], "summary": "Get User Profiles For Admin", "operationId": "get_user_profiles_for_admin_api_v1_admin_profiles__get", "parameters": [{"description": "input skill id as integer", "required": false, "schema": {"title": "Skill-Id", "type": "integer", "description": "input skill id as integer"}, "name": "skill-id", "in": "query"}, {"description": "input employee name as string", "required": false, "schema": {"title": "Employee-Name", "type": "string", "description": "input employee name as string"}, "name": "employee-name", "in": "query"}, {"description": "input mobile as string", "required": false, "schema": {"title": "Mobile", "type": "string", "description": "input mobile as string"}, "name": "mobile", "in": "query"}, {"description": "input email as string", "required": false, "schema": {"title": "Email", "type": "string", "description": "input email as string"}, "name": "email", "in": "query"}, {"description": "profile status as enum", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/ProfileStatusEnum"}], "description": "profile status as enum"}, "name": "profile-status", "in": "query"}, {"description": "page number of pagination", "required": false, "schema": {"title": "Page-Number", "exclusiveMinimum": 0.0, "type": "integer", "description": "page number of pagination", "default": 1}, "name": "page-number", "in": "query"}, {"description": "number of element in page", "required": false, "schema": {"title": "Page-Size", "exclusiveMinimum": 0.0, "type": "integer", "description": "number of element in page", "default": 10}, "name": "page-size", "in": "query"}], "responses": {"200": {"description": "The profile basic details is requested", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PaginatedProfileResponse"}}}}, "404": {"description": "The profile basic details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/admin/user-profiles/{profile_id}": {"get": {"tags": ["profile"], "summary": "Get User Profile By Id For Admin", "operationId": "get_user_profile_by_id_for_admin_api_v1_admin_user_profiles__profile_id__get", "parameters": [{"description": "input profile id of the user", "required": true, "schema": {"title": "Profile Id", "type": "string", "description": "input profile id of the user", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "profile_id", "in": "path"}], "responses": {"200": {"description": "The profile details is requested", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileDetailsResponse"}}}}, "404": {"description": "The profile details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/user-profiles/": {"get": {"tags": ["profile"], "summary": "Get User Profile By User", "operationId": "get_user_profile_by_user_api_v1_profile_user_profiles__get", "responses": {"200": {"description": "The profile details is requested", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileDetailsResponse"}}}}, "404": {"description": "The profile details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}}, "security": [{"JWTBearer": []}]}, "post": {"tags": ["profile"], "summary": "Create User Profile By User", "description": "**Create:** Must provide *\"email\"*, *\"name\"*, *\"designation_id\"* except *\"profile_id\"*. Other attributes are optional.\n\n\n**Update:** Must provide *\"profile_id\"*. Should not provide *\"email\"*, *\"name\"*, *\"designation_id\"*. Other attributes are optional.", "operationId": "create_user_profile_by_user_api_v1_profile_user_profiles__post", "requestBody": {"content": {"application/json": {"schema": {"title": "Profile", "allOf": [{"$ref": "#/components/schemas/ProfileBasicRequest"}], "description": "input profile data"}, "examples": {"CREATE": {"summary": "Create Body", "description": "a example of body for create operation", "value": {"email": "developer.ixorasolution@gmail.com", "name": "Chelsey Adams", "date_of_birth": "1995-07-26", "gender": 2, "mobile": "+01611123456", "address": "House: X, State:Y, Z, Country", "designation_id": 1}}, "UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"profile_id": "abf887d8-998d-46b5-907c-63b62db8d22e", "date_of_birth": "1995-07-26", "gender": 2, "mobile": "+01611123456", "address": "House: X, State:Y, Z, Country"}}}}}, "required": true}, "responses": {"200": {"description": "The profile details is requested", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileResponse"}}}}, "404": {"description": "The profile details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerInactive": []}]}}, "/api/v1/admin/user-profiles/": {"post": {"tags": ["profile"], "summary": "Create Or Update User Profile By Admin", "description": "**Create:** Must provide *\"email\"*, *\"name\"*, *\"designation_id\"* except *\"profile_id\"*. Other attributes are optional.\n\n\n**Update:** Must provide *\"profile_id\"*. Should not provide *\"email\"*. Other attributes are optional.", "operationId": "create_or_update_user_profile_by_admin_api_v1_admin_user_profiles__post", "requestBody": {"content": {"application/json": {"schema": {"title": "Profile", "allOf": [{"$ref": "#/components/schemas/ProfileBasicForAdminRequest"}], "description": "input profile data"}, "examples": {"CREATE": {"summary": "Create Body", "description": "An example of body for create operation", "value": {"email": "developer.ixorasolution@gmail.com", "name": "Chelsey Adams", "date_of_birth": "1995-07-26", "gender": 2, "mobile": "+01611123456", "address": "House: X, State:Y, Z, Country", "designation_id": 1, "profile_status": 1, "designation_status": 1}}, "UPDATE": {"summary": "Update Body", "description": "An example of body for update operation", "value": {"profile_id": "e2f66f6b-101e-4c76-940e-31ebcd105298", "name": "Chelsey Adams", "date_of_birth": "1995-07-26", "gender": 2, "mobile": "+01611123456", "address": "House: X, State:Y, Z, Country", "designation_id": 1, "profile_status": 1, "designation_status": 1}}}}}, "required": true}, "responses": {"200": {"description": "The profile details is requested", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileResponse"}}}}, "404": {"description": "The profile details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "400": {"description": "The profile details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/experiences": {"post": {"tags": ["experience"], "summary": "Create Experience By User", "description": "**Create:** Must provide all the data except *\"experience_id\"*. *\"status\"* is optional.\n\n\n**Update:** Must provide *\"experience_id\"*. Other attributes are optional.", "operationId": "create_experience_by_user_api_v1_profile_experiences_post", "requestBody": {"content": {"application/json": {"schema": {"title": "Experience Request", "allOf": [{"$ref": "#/components/schemas/ExperienceCreateRequest"}], "description": "input experience data"}, "examples": {"CREATE": {"summary": "Create Body", "description": "a example of body for create operation", "value": {"company_name": "X Software", "job_responsibility": "Backend Development", "designation": "Software Engineer", "start_date": "2021-07-12T11:55:30.858969+00:00", "end_date": "2022-05-08T11:55:30.858980+00:00"}}, "UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"experience_id": 1, "company_name": "X Software", "job_responsibility": "Backend Development", "designation": "Software Engineer", "start_date": "2021-07-12T11:55:30.858969+00:00", "end_date": "2022-05-08T11:55:30.858980+00:00", "status": 2}}}}}, "required": true}, "responses": {"201": {"description": "The experience is successfully created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ExperienceListDataResponse"}}}}, "400": {"description": "The experience is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/admin/profile/experiences": {"post": {"tags": ["experience"], "summary": "Create Experience By Admin", "description": "**Create:** Must provide all the data except *\"experience_id\"*. *\"status\"* is optional.\n\n\n**Update:** Must provide *\"experience_id\"*. Other attributes are optional.", "operationId": "create_experience_by_admin_api_v1_admin_profile_experiences_post", "requestBody": {"content": {"application/json": {"schema": {"title": "Experience Request", "allOf": [{"$ref": "#/components/schemas/ExperienceCreateAdminRequest"}], "description": "input experience data"}, "examples": {"CREATE": {"summary": "Create Body", "description": "a example of body for create operation", "value": {"profile_id": "51f49e71-bce1-4aee-994b-7a9b31f0f77d", "company_name": "X Software", "job_responsibility": "Backend Development", "designation": "Software Engineer", "start_date": "2021-07-12T11:55:30.858969+00:00", "end_date": "2022-05-08T11:55:30.858980+00:00"}}, "UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"experience_id": 1, "profile_id": "d761602c-3f0c-4f7d-8348-1fea56bc2851", "company_name": "X Software", "job_responsibility": "Backend Development", "designation": "Software Engineer", "start_date": "2021-07-12T11:55:30.858969+00:00", "end_date": "2022-05-08T11:55:30.858980+00:00", "status": 2}}}}}, "required": true}, "responses": {"201": {"description": "The experience is successfully created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ExperienceListDataResponse"}}}}, "400": {"description": "The experience is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/admin/user-profiles/{profile_id}/experiences": {"get": {"tags": ["experience"], "summary": "Get Profile Educations By Admin", "operationId": "get_profile_educations_by_admin_api_v1_admin_user_profiles__profile_id__experiences_get", "parameters": [{"description": "input profile id of the user", "required": true, "schema": {"title": "Profile Id", "type": "string", "description": "input profile id of the user", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "profile_id", "in": "path"}], "responses": {"200": {"description": "The experiences requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileExperienceDetailsResponse"}}}}, "404": {"description": "The experiences details are not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/user-profiles/experiences": {"get": {"tags": ["experience"], "summary": "Get Profile Educations By User", "operationId": "get_profile_educations_by_user_api_v1_profile_user_profiles_experiences_get", "responses": {"200": {"description": "The educations requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileExperienceDetailsResponse"}}}}, "404": {"description": "The educations details are not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/profile/educations": {"post": {"tags": ["education"], "summary": "Create Education By User", "description": "**Create:** Must provide all the data except *\"education_id\"*. *\"status\"* is optional.\n\n\n**Update:** Must provide *\"education_id\"*. Other attributes are optional.", "operationId": "create_education_by_user_api_v1_profile_educations_post", "requestBody": {"content": {"application/json": {"schema": {"title": "Education Request", "allOf": [{"$ref": "#/components/schemas/EducationCreateRequest"}], "description": "input education data"}, "examples": {"CREATE": {"summary": "Create Body", "description": "a example of body for create operation", "value": {"degree_name": "B.Sc in Computer Science", "school_name": "University of Dhaka", "passing_year": "2019", "grade": 3.8, "status": 1}}, "UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"education_id": 1, "degree_name": "B.Sc in Computer Science", "school_name": "University of Dhaka", "passing_year": "2019", "grade": 3.8, "status": 1}}}}}, "required": true}, "responses": {"201": {"description": "The education is successfully created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EducationListDataResponse"}}}}, "400": {"description": "The education is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/admin/profile/educations": {"post": {"tags": ["education"], "summary": "Create Education By Admin", "description": "**Create:** Must provide all the data except *\"education_id\"*. *\"status\"* is optional.\n\n\n**Update:** Must provide *\"education_id\"*. Other attributes are optional.", "operationId": "create_education_by_admin_api_v1_admin_profile_educations_post", "requestBody": {"content": {"application/json": {"schema": {"title": "Education Request", "allOf": [{"$ref": "#/components/schemas/EducationCreateAdminRequest"}], "description": "input education data"}, "examples": {"CREATE": {"summary": "Create Body", "description": "a example of body for create operation", "value": {"profile_id": "6c3d7513-4405-4a0e-90d2-f78ca0a9640d", "degree_name": "B.Sc in Computer Science", "school_name": "University of Dhaka", "passing_year": "2019", "grade": 3.8, "status": 1}}, "UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"profile_id": "d0141469-75e3-43d7-8ed9-6e9048857a52", "education_id": 1, "degree_name": "B.Sc in Computer Science", "school_name": "University of Dhaka", "passing_year": "2019", "grade": 3.8, "status": 1}}}}}, "required": true}, "responses": {"201": {"description": "The education is successfully created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EducationListDataResponse"}}}}, "400": {"description": "The education is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/admin/user-profiles/{profile_id}/educations": {"get": {"tags": ["education"], "summary": "Get Profile Educations By Admin", "operationId": "get_profile_educations_by_admin_api_v1_profile_admin_user_profiles__profile_id__educations_get", "parameters": [{"description": "input profile id of the user", "required": true, "schema": {"title": "Profile Id", "type": "string", "description": "input profile id of the user", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "profile_id", "in": "path"}], "responses": {"200": {"description": "The skills requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileEducationDetailsResponse"}}}}, "404": {"description": "The skills details are not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/user-profiles/educations": {"get": {"tags": ["education"], "summary": "Get Profile Educations By User", "operationId": "get_profile_educations_by_user_api_v1_profile_user_profiles_educations_get", "responses": {"200": {"description": "The educations requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileEducationDetailsResponse"}}}}, "404": {"description": "The educations details are not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/profile/files/upload-resume": {"post": {"tags": ["file"], "summary": "Upload Resume", "operationId": "upload_resume_api_v1_profile_files_upload_resume_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_upload_resume_api_v1_profile_files_upload_resume_post"}}}, "required": true}, "responses": {"201": {"description": "The resume is successfully uploaded", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FileUploadResponse"}}}}, "400": {"description": "The resume is not uploaded", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/profile/files/upload-profile-picture": {"post": {"tags": ["file"], "summary": "Upload Profile Picture", "operationId": "upload_profile_picture_api_v1_profile_files_upload_profile_picture_post", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_upload_profile_picture_api_v1_profile_files_upload_profile_picture_post"}}}, "required": true}, "responses": {"201": {"description": "The profile picture  is successfully uploaded", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FileUploadResponse"}}}}, "400": {"description": "The profile picture is not uploaded", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/profile/files/response/{file_id}": {"get": {"tags": ["file"], "summary": "Get File Response For User", "operationId": "get_file_response_for_user_api_v1_profile_files_response__file_id__get", "parameters": [{"description": "input file id for file response", "required": true, "schema": {"title": "File Id", "type": "string", "description": "input file id for file response", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "file_id", "in": "path"}], "responses": {"200": {"description": "The profile picture is rendered or file provided as attachment"}, "400": {"description": "The profile picture is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/admin/files/response/{file_id}": {"get": {"tags": ["file"], "summary": "Get File Response For Admin", "operationId": "get_file_response_for_admin_api_v1_admin_files_response__file_id__get", "parameters": [{"description": "input file id for file response", "required": true, "schema": {"title": "File Id", "type": "string", "description": "input file id for file response", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "file_id", "in": "path"}], "responses": {"200": {"description": "The profile picture is rendered or file provided as attachment"}, "400": {"description": "The profile picture is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/admin/files/{file_id}": {"delete": {"tags": ["file"], "summary": "Delete File By Admin", "operationId": "delete_file_by_admin_api_v1_admin_files__file_id__delete", "parameters": [{"description": "input file id for file response", "required": true, "schema": {"title": "File Id", "type": "string", "description": "input file id for file response", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "file_id", "in": "path"}], "responses": {"200": {"description": "The profile picture is deleted successfully", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessMessage"}}}}, "400": {"description": "The profile picture can not be deleted", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/files/{file_id}": {"delete": {"tags": ["file"], "summary": "Delete File By User", "operationId": "delete_file_by_user_api_v1_profile_files__file_id__delete", "parameters": [{"description": "input file id for file response", "required": true, "schema": {"title": "File Id", "type": "string", "description": "input file id for file response", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "file_id", "in": "path"}], "responses": {"200": {"description": "The profile picture is deleted successfully", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SuccessMessage"}}}}, "400": {"description": "The profile picture can not be deleted", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/designations/{designation-id}": {"get": {"tags": ["designation"], "summary": "Get Designation", "operationId": "get_designation_api_v1_designations__designation_id__get", "parameters": [{"description": "provide skill id to get skill information", "required": true, "schema": {"title": "Designation-Id", "type": "integer", "description": "provide skill id to get skill information"}, "name": "designation-id", "in": "path"}], "responses": {"200": {"description": "The designation requested by id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DesignationDataResponse"}}}}, "404": {"description": "The designation details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/designations": {"get": {"tags": ["designation"], "summary": "Get Designation List", "operationId": "get_designation_list_api_v1_designations_get", "parameters": [{"description": "input designation name as string", "required": false, "schema": {"title": "Designation-Name", "type": "string", "description": "input designation name as string"}, "name": "designation-name", "in": "query"}], "responses": {"200": {"description": "The designation list requested", "content": {"application/json": {"schema": {"title": "Response Get Designation List Api V1 Designations Get", "type": "array", "items": {"$ref": "#/components/schemas/DesignationDataResponse"}}}}}, "404": {"description": "The designation list is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/profile/designations": {"post": {"tags": ["designation"], "summary": "Update Designation", "description": "**Update:** For update purposes provide *\"start_date\"* and *\"end_date\"*.", "operationId": "update_designation_api_v1_profile_designations_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DesignationCreateRequest"}, "examples": {"UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"start_date": "2019-08-24T14:15:22Z", "end_date": "2020-12-24T14:15:22Z"}}}}}, "required": true}, "responses": {"201": {"description": "The designation is created successfully", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileDesignationResponse"}}}}, "404": {"description": "The designation is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearer": []}]}}, "/api/v1/admin/profile/designations": {"post": {"tags": ["designation"], "summary": "Update Designation By Admin", "description": "**Update:** For update purposes provide *\"start_date\"* and *\"end_date\"*.", "operationId": "update_designation_by_admin_api_v1_admin_profile_designations_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DesignationCreateAdminRequest"}, "examples": {"UPDATE": {"summary": "Update Body", "description": "a example of body for update operation", "value": {"profile_id": "b9802828-0909-4944-8687-753844fb6e02", "start_date": "2019-08-24T14:15:22Z", "end_date": "2020-12-24T14:15:22Z", "designation_status": 2}}}}}, "required": true}, "responses": {"201": {"description": "The designation is created successfully", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileDesignationResponse"}}}}, "404": {"description": "The designation is not created", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/admin/user-profiles/{profile_id}/designation": {"get": {"tags": ["designation"], "summary": "Get Profile Designation By Admin", "operationId": "get_profile_designation_by_admin_api_v1_profile_admin_user_profiles__profile_id__designation_get", "parameters": [{"description": "input profile id of the user", "required": true, "schema": {"title": "Profile Id", "type": "string", "description": "input profile id of the user", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "name": "profile_id", "in": "path"}], "responses": {"200": {"description": "The designation requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileDesignationDetailsResponse"}}}}, "404": {"description": "The designation details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"JWTBearerAdmin": []}]}}, "/api/v1/profile/user-profiles/designation": {"get": {"tags": ["designation"], "summary": "Get Profile Designation By User", "operationId": "get_profile_designation_by_user_api_v1_profile_user_profiles_designation_get", "responses": {"200": {"description": "The designation requested by profile id", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProfileDesignationDetailsResponse"}}}}, "404": {"description": "The designation details is not available", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}}}, "security": [{"JWTBearer": []}]}}}, "components": {"schemas": {"Body_upload_certificate_api_v1_profile_skills__skill_id__upload_certificate_post": {"title": "Body_upload_certificate_api_v1_profile_skills__skill_id__upload_certificate_post", "type": "object", "properties": {"files": {"title": "Files", "type": "array", "items": {"type": "string", "format": "binary"}, "description": "select certificate files to upload"}}}, "Body_upload_profile_picture_api_v1_profile_files_upload_profile_picture_post": {"title": "Body_upload_profile_picture_api_v1_profile_files_upload_profile_picture_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "description": "select certificate files to upload", "format": "binary"}, "file_status": {"allOf": [{"$ref": "#/components/schemas/UserStatusEnum"}], "description": "status of the file", "default": 1}}}, "Body_upload_resume_api_v1_profile_files_upload_resume_post": {"title": "Body_upload_resume_api_v1_profile_files_upload_resume_post", "required": ["file"], "type": "object", "properties": {"file": {"title": "File", "type": "string", "description": "select certificate files to upload", "format": "binary"}, "file_status": {"allOf": [{"$ref": "#/components/schemas/UserStatusEnum"}], "description": "status of the file", "default": 1}}}, "CreateSkillDataAdminRequest": {"title": "CreateSkillDataAdminRequest", "required": ["skill_id", "profile_id"], "type": "object", "properties": {"skill_id": {"title": "Skill Id", "type": "integer", "description": "id of skill"}, "profile_id": {"title": "Profile Id", "type": "string", "description": "id of the profile", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "experience_year": {"title": "Experience Year", "maximum": 45.0, "type": "integer", "description": "experience of the indicated skill"}, "number_of_projects": {"title": "Number Of Projects", "maximum": 80.0, "type": "integer", "description": "number of projects on that skill"}, "level": {"title": "Level", "maximum": 10.0, "minimum": 1.0, "type": "integer", "description": "level of proficiency on the skill"}, "training_duration": {"title": "Training Duration", "maximum": 100.0, "type": "integer", "description": "training duration in months"}, "achievements": {"title": "Achievements", "maxLength": 1, "type": "string", "description": "marker for having the achievements\n\n    0 or 1"}, "achievements_description": {"title": "Achievements Description", "maxLength": 255, "type": "string", "description": "description of the achievement"}, "certificate": {"title": "Certificate", "maxLength": 1, "type": "string", "description": "marker for having the certificate\n\n    0 or 1"}, "status": {"allOf": [{"$ref": "#/components/schemas/StatusEnum"}], "description": "skill data validity status \n\n    1: active, 3: delete", "default": 1}}, "example": {"skill_id": 1, "experience_year": 4, "number_of_projects": 4, "level": 5, "training_duration": 2, "achievements": "1", "achievements_description": "It is the achievement's description", "certificate": "1", "status": 1}}, "CreateSkillDataRequest": {"title": "CreateSkillDataRequest", "required": ["skill_id"], "type": "object", "properties": {"skill_id": {"title": "Skill Id", "type": "integer", "description": "id of skill"}, "experience_year": {"title": "Experience Year", "maximum": 45.0, "type": "integer", "description": "experience of the indicated skill"}, "number_of_projects": {"title": "Number Of Projects", "maximum": 80.0, "type": "integer", "description": "number of projects on that skill"}, "level": {"title": "Level", "maximum": 10.0, "minimum": 1.0, "type": "integer", "description": "level of proficiency on the skill"}, "training_duration": {"title": "Training Duration", "maximum": 100.0, "type": "integer", "description": "training duration in months"}, "achievements": {"title": "Achievements", "maxLength": 1, "type": "string", "description": "marker for having the achievements\n\n    0 or 1"}, "achievements_description": {"title": "Achievements Description", "maxLength": 255, "type": "string", "description": "description of the achievement"}, "certificate": {"title": "Certificate", "maxLength": 1, "type": "string", "description": "marker for having the certificate\n\n    0 or 1"}, "status": {"allOf": [{"$ref": "#/components/schemas/UserStatusEnum"}], "description": "skill data validity status \n\n    1: active, 3: delete", "default": 1}}, "example": {"skill_id": 1, "experience_year": 4, "number_of_projects": 4, "level": 5, "training_duration": 2, "achievements": "1", "achievements_description": "It is the achievement's description", "certificate": "1", "status": 1}}, "CreateSkillDataResponse": {"title": "CreateSkillDataResponse", "type": "object", "properties": {"skill_id": {"title": "Skill Id", "type": "integer", "description": "id of skill"}, "skill_type": {"title": "Skill Type", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "type of skill from fixed list of values"}, "skill_category": {"title": "Skill Category", "maxItems": 7, "type": "array", "items": {"$ref": "#/components/schemas/ResponseEnumData"}, "description": "category of skill from fixed list of items"}, "skill_name": {"title": "Skill Name", "maxLength": 20, "type": "string", "description": "name of skill from fixed list of values"}, "status": {"title": "Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "status of skill from fixed list of values"}, "experience_year": {"title": "Experience Year", "maximum": 45.0, "type": "integer", "description": "experience of the indicated skill"}, "number_of_projects": {"title": "Number Of Projects", "maximum": 80.0, "type": "integer", "description": "number of projects on that skill"}, "level": {"title": "Level", "maximum": 10.0, "minimum": 1.0, "type": "integer", "description": "level of proficiency on the skill"}, "training_duration": {"title": "Training Duration", "maximum": 100.0, "type": "integer", "description": "training duration in months"}, "achievements": {"title": "Achievements", "maxLength": 1, "type": "string", "description": "marker for having the achievements\n\n    0 or 1"}, "achievements_description": {"title": "Achievements Description", "maxLength": 255, "type": "string", "description": "description of the achievement"}, "certificate": {"title": "Certificate", "maxLength": 1, "type": "string", "description": "marker for having the certificate\n\n    0 or 1"}, "certificates_url": {"title": "Certificates Url", "type": "array", "items": {"$ref": "#/components/schemas/FileResponse"}, "description": "file response url of certificates"}}, "example": {"skill_id": 1, "skill_name": "react", "skill_type": {"id": 1, "name": "core_skill"}, "skill_category": [{"id": 1, "name": "frontend"}, {"id": 2, "name": "backend"}], "experience_year": 4, "number_of_projects": 4, "level": 5, "training_duration": 2, "achievements": "1", "achievements_description": "It is the achievement's description", "certificate": "1", "status": {"id": 1, "name": "active"}, "certificates_url": [{"file_name": "certificate_file.pdf", "url": "/files/1"}]}}, "CreateSkillListDataResponse": {"title": "CreateSkillListDataResponse", "required": ["skills"], "type": "object", "properties": {"skills": {"title": "Skills", "type": "array", "items": {"$ref": "#/components/schemas/CreateSkillDataResponse"}}}}, "DesignationCreateAdminRequest": {"title": "DesignationCreateAdminRequest", "required": ["profile_id"], "type": "object", "properties": {"profile_id": {"title": "Profile Id", "type": "string", "description": "id of profile", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "start_date": {"title": "Start Date", "type": "string", "description": "start date of designated job", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of designated job\n\n    > start_date", "format": "date-time"}, "designation_status": {"allOf": [{"$ref": "#/components/schemas/DesignationStatusEnum"}], "description": "designation data validity status\n\n    1: active, 3: delete"}}}, "DesignationCreateRequest": {"title": "DesignationCreateRequest", "type": "object", "properties": {"start_date": {"title": "Start Date", "type": "string", "description": "start date of designated job", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of designated job\n    \n    > start_date", "format": "date-time"}}}, "DesignationDataResponse": {"title": "DesignationDataResponse", "type": "object", "properties": {"designation": {"title": "Designation", "minLength": 2, "type": "string", "description": "designation of the user"}, "designation_id": {"title": "Designation Id", "minimum": 1.0, "type": "integer", "description": "id of designation"}}}, "DesignationStatusEnum": {"title": "DesignationStatusEnum", "enum": [1, 2], "type": "integer", "description": "An enumeration."}, "EducationCreateAdminRequest": {"title": "EducationCreateAdminRequest", "required": ["profile_id"], "type": "object", "properties": {"profile_id": {"title": "Profile Id", "type": "string", "description": "profile_id of the user", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "education_id": {"title": "Education Id", "minimum": 1.0, "type": "integer", "description": "id of user's education"}, "degree_name": {"title": "Degree Name", "maxLength": 30, "type": "string", "description": "degree name of the user's education"}, "school_name": {"title": "School Name", "maxLength": 30, "type": "string", "description": "school name of the user's education"}, "passing_year": {"title": "Passing Year", "maxLength": 4, "type": "string", "description": "passing year of the user's education"}, "grade": {"title": "Grade", "maximum": 5.0, "minimum": 2.5, "type": "number", "description": "grade of the user's education'"}, "status": {"allOf": [{"$ref": "#/components/schemas/StatusEnum"}], "description": "education data validity status\n\n    1: active, 3: delete", "default": 1}}, "description": "Must provide education id or other information[status is optional]"}, "EducationCreateRequest": {"title": "EducationCreateRequest", "type": "object", "properties": {"education_id": {"title": "Education Id", "minimum": 1.0, "type": "integer", "description": "id of user's education"}, "degree_name": {"title": "Degree Name", "maxLength": 30, "type": "string", "description": "degree name of the user's education"}, "school_name": {"title": "School Name", "maxLength": 30, "type": "string", "description": "school name of the user's education"}, "passing_year": {"title": "Passing Year", "maxLength": 4, "type": "string", "description": "passing year of the user's education"}, "grade": {"title": "Grade", "maximum": 5.0, "minimum": 2.5, "type": "number", "description": "grade of the user's education'"}, "status": {"allOf": [{"$ref": "#/components/schemas/UserStatusEnum"}], "description": "education data validity status\n                                   \n    1: active, 3: delete", "default": 1}}, "description": "Must provide education id or other information[status is optional]"}, "EducationCreateResponse": {"title": "EducationCreateResponse", "type": "object", "properties": {"degree_name": {"title": "Degree Name", "maxLength": 30, "type": "string", "description": "degree name of the user education"}, "school_name": {"title": "School Name", "maxLength": 30, "type": "string", "description": "school name of the user education"}, "passing_year": {"title": "Passing Year", "maxLength": 4, "type": "string", "description": "passing year of the user education"}, "grade": {"title": "Grade", "maximum": 5.0, "minimum": 2.5, "type": "number"}, "education_id": {"title": "Education Id", "exclusiveMinimum": 0.0, "type": "integer", "description": "id of the user education"}, "status": {"$ref": "#/components/schemas/StatusEnum"}}, "example": {"education_id": 1, "degree_name": "B.Sc in Computer Science", "school_name": "University of Dhaka", "passing_year": "2019", "grade": 3.8, "status": 1}}, "EducationListDataResponse": {"title": "EducationListDataResponse", "required": ["educations"], "type": "object", "properties": {"educations": {"title": "Educations", "type": "array", "items": {"$ref": "#/components/schemas/EducationCreateResponse"}}}}, "ErrorMessage": {"title": "ErrorMessage", "type": "object", "properties": {"detail": {"title": "Detail", "type": "string", "default": "An error message"}}}, "ExperienceCreateAdminRequest": {"title": "ExperienceCreateAdminRequest", "required": ["profile_id"], "type": "object", "properties": {"profile_id": {"title": "Profile Id", "type": "string", "description": "profile id for user", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "experience_id": {"title": "Experience Id", "minimum": 1.0, "type": "integer", "description": "id of experiment for user"}, "company_name": {"title": "Company Name", "maxLength": 30, "type": "string", "description": "name of company that user worked on"}, "job_responsibility": {"title": "Job Responsibility", "maxLength": 255, "type": "string", "description": "responsibility for job on the company"}, "designation": {"title": "Designation", "type": "string", "description": "designation for profile experience"}, "start_date": {"title": "Start Date", "type": "string", "description": "start date of experience", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of experience\n\n    > start_date", "format": "date-time"}, "status": {"allOf": [{"$ref": "#/components/schemas/UserStatusEnum"}], "description": "experience data validity status\n\n    1: active, 3: delete", "default": 1}}, "example": {"company_name": "X Software", "job_responsibility": "Backend Development", "designation_id": 2, "start_date": "2021-07-29T12:00:25.736972+00:00", "end_date": "2022-05-25T12:00:25.736983+00:00", "status": 1}}, "ExperienceCreateRequest": {"title": "ExperienceCreateRequest", "type": "object", "properties": {"experience_id": {"title": "Experience Id", "minimum": 1.0, "type": "integer", "description": "id of experiment for user"}, "company_name": {"title": "Company Name", "maxLength": 30, "type": "string", "description": "name of company that user worked on"}, "job_responsibility": {"title": "Job Responsibility", "maxLength": 255, "type": "string", "description": "responsibility for job on the company"}, "designation": {"title": "Designation", "type": "string", "description": "designation for profile experience"}, "start_date": {"title": "Start Date", "type": "string", "description": "start date of experience", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of experience\n    \n    > start_date", "format": "date-time"}, "status": {"allOf": [{"$ref": "#/components/schemas/UserStatusEnum"}], "description": "experience data validity status\n                                   \n    1: active, 3: delete", "default": 1}}, "example": {"company_name": "X Software", "job_responsibility": "Backend Development", "designation_id": 2, "start_date": "2021-07-29T12:00:25.718332+00:00", "end_date": "2022-05-25T12:00:25.718344+00:00", "status": 1}}, "ExperienceCreateResponse": {"title": "ExperienceCreateResponse", "type": "object", "properties": {"experience_id": {"title": "Experience Id", "minimum": 1.0, "type": "integer", "description": "autoincrement experience id for this profile"}, "company_name": {"title": "Company Name", "maxLength": 30, "type": "string", "description": "name of company that user worked on"}, "job_responsibility": {"title": "Job Responsibility", "maxLength": 255, "type": "string", "description": "responsibility for job on the company"}, "designation": {"title": "Designation", "allOf": [{"$ref": "#/components/schemas/ProfileExperienceDesignationResponse"}], "description": "designation for this profile experience"}, "start_date": {"title": "Start Date", "type": "string", "description": "start date of experience", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of experience", "format": "date-time"}, "status": {"title": "Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "designation status of experience"}}, "example": {"experience_id": 1, "company_name": "X Software", "job_responsibility": "Backend Development", "designation": {"designation_id": 2, "designation": "Software Developer"}, "start_date": "2021-07-29T12:00:25.726480+00:00", "end_date": "2022-05-25T12:00:25.726494+00:00", "status": {"id": 1, "name": "active"}}}, "ExperienceListDataResponse": {"title": "ExperienceListDataResponse", "required": ["experiences"], "type": "object", "properties": {"experiences": {"title": "Experiences", "type": "array", "items": {"$ref": "#/components/schemas/ExperienceCreateResponse"}}}}, "FileResponse": {"title": "FileResponse", "required": ["url", "status"], "type": "object", "properties": {"file_name": {"title": "File Name", "type": "string", "description": "name of the file"}, "url": {"title": "Url", "type": "string", "description": "api url of the file"}, "status": {"title": "Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "status of the file"}}}, "FileUploadResponse": {"title": "FileUploadResponse", "required": ["file_id", "file_name", "file_type", "file_size", "status", "file_response_url", "admin_file_response_url"], "type": "object", "properties": {"file_id": {"title": "File Id", "type": "string", "description": "autoincrement id of the file", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "file_name": {"title": "File Name", "type": "string", "description": "name of the file to be uploaded"}, "file_type": {"title": "File Type", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "type of file to be uploaded"}, "file_size": {"title": "File Size", "type": "string", "description": "file size in KB"}, "status": {"title": "Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "status"}, "file_response_url": {"title": "File Response Url", "type": "string", "description": "file url"}, "admin_file_response_url": {"title": "Admin File Response Url", "type": "string", "description": "file url for admin"}}, "example": {"file_id": 1, "file_name": "cv_x.pdf", "file_type": {"id": 2, "name": "resume"}, "file_size": 1024, "status": {"id": 1, "name": "active"}, "file_response_url": "/profile/files/<uuid of the file id>", "admin_file_response_url": "/admin/files/<uuid of the file id>"}}, "GenderEnum": {"title": "GenderEnum", "enum": [1, 2, 3], "type": "integer", "description": "An enumeration."}, "GetSkillDataResponse": {"title": "GetSkillDataResponse", "type": "object", "properties": {"skill_id": {"title": "Skill Id", "type": "integer", "description": "id of skill"}, "skill_type": {"title": "Skill Type", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "type of skill from fixed list of values"}, "skill_category": {"title": "Skill Category", "maxItems": 7, "type": "array", "items": {"$ref": "#/components/schemas/ResponseEnumData"}, "description": "category of skill from fixed list of items"}, "skill_name": {"title": "Skill Name", "maxLength": 20, "type": "string", "description": "name of skill from fixed list of values"}}, "example": {"id": 1, "skill_name": "react", "skill_type": {"id": 1, "name": "core_skill"}, "skill_category": [{"id": 1, "name": "frontend"}, {"id": 2, "name": "backend"}]}}, "GetSkillDataResponseList": {"title": "GetSkillDataResponseList", "type": "object", "properties": {"skills": {"title": "Skills", "type": "array", "items": {"$ref": "#/components/schemas/GetSkillDataResponse"}}}, "example": {"skills": [{"id": 1, "skill_name": "react", "skill_type": {"id": 1, "name": "core_skill"}, "skill_category": [{"id": 1, "name": "frontend"}, {"id": 2, "name": "backend"}]}, {"id": 2, "skill_name": "django", "skill_type": {"id": 1, "name": "core_skill"}, "skill_category": [{"id": 2, "name": "backend"}]}]}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "PaginatedProfileResponse": {"title": "PaginatedProfileResponse", "type": "object", "properties": {"previous_page": {"title": "Previous Page", "type": "integer", "description": "previous page of current pagination page"}, "next_page": {"title": "Next Page", "type": "integer", "description": "next page of current pagination page"}, "has_previous": {"title": "Has Previous", "type": "boolean", "description": "bool indicator whether current page has previous page"}, "has_next": {"title": "Has Next", "type": "boolean", "description": "bool indicator whether current page has next page"}, "total_items": {"title": "Total Items", "type": "integer", "description": "total number of items"}, "pages": {"title": "Pages", "type": "integer", "description": "total number of pages"}, "items": {"title": "Items", "type": "array", "items": {"$ref": "#/components/schemas/ProfileBasicResponse"}}}, "example": {"items": [{"id": "954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0", "_url": "/admin/user-profiles/954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0", "email": "developer.ixorasolution@gmail.com", "name": "Chelsey Adams", "mobile": "+01611123456", "designation": {"designation_id": 1, "designation": "Software Engineer"}, "skills": [{"experience_year": 4, "level": 4, "skill_name": "react", "skill_id": 1}, {"experience_year": 4, "level": 7, "skill_name": "django", "skill_id": 2}]}], "previous_page": 0, "next_page": 2, "has_previous": false, "has_next": true, "total_items": 100, "pages": 10}}, "PlanCreateAdminRequest": {"title": "PlanCreateAdminRequest", "required": ["profile_id"], "type": "object", "properties": {"plan_type": {"allOf": [{"$ref": "#/components/schemas/PlanTypeEnum"}], "description": "the type of the plan\n    \n    1: course, 2: exam"}, "notes": {"title": "Notes", "maxLength": 255, "type": "string", "description": "notes for plan"}, "plan_id": {"title": "Plan Id", "type": "string", "description": "id for plan", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "skill_id": {"title": "Skill Id", "exclusiveMinimum": 0.0, "type": "integer", "description": "skill_id is related to skill collection"}, "task": {"title": "Task", "type": "array", "items": {"$ref": "#/components/schemas/TaskCreate"}, "default": []}, "start_date": {"title": "Start Date", "type": "string", "description": "start date of plan", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of plan\n    \n    > start_date", "format": "date-time"}, "delete_tasks": {"title": "Delete Tasks", "type": "array", "items": {"type": "integer"}, "description": "list of task id to delete"}, "status": {"allOf": [{"$ref": "#/components/schemas/UserStatusEnum"}], "description": "status of plan\n    \n    1: active, 3: delete", "default": 1}, "profile_id": {"title": "Profile Id", "type": "string", "description": "profile_id is related to profile collection", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}}}, "PlanCreateRequest": {"title": "PlanCreateRequest", "type": "object", "properties": {"plan_type": {"allOf": [{"$ref": "#/components/schemas/PlanTypeEnum"}], "description": "the type of the plan\n    \n    1: course, 2: exam"}, "notes": {"title": "Notes", "maxLength": 255, "type": "string", "description": "notes for plan"}, "plan_id": {"title": "Plan Id", "type": "string", "description": "id for plan", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "skill_id": {"title": "Skill Id", "exclusiveMinimum": 0.0, "type": "integer", "description": "skill_id is related to skill collection"}, "task": {"title": "Task", "type": "array", "items": {"$ref": "#/components/schemas/TaskCreate"}, "default": []}, "start_date": {"title": "Start Date", "type": "string", "description": "start date of plan", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of plan\n    \n    > start_date", "format": "date-time"}, "delete_tasks": {"title": "Delete Tasks", "type": "array", "items": {"type": "integer"}, "description": "list of task id to delete"}, "status": {"allOf": [{"$ref": "#/components/schemas/UserStatusEnum"}], "description": "status of plan\n    \n    1: active, 3: delete", "default": 1}}}, "PlanCreateResponse": {"title": "PlanCreateResponse", "required": ["skill_name", "skill_type"], "type": "object", "properties": {"id": {"title": "Id", "anyOf": [{"type": "string", "format": "uuid4"}, {"type": "string"}], "description": "id of plan of type UUID"}, "skill_name": {"title": "Skill Name", "type": "string", "description": "skill name of plan"}, "skill_type": {"title": "Skill Type", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "skill type of plan"}, "plan_type": {"title": "Plan Type", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "Fixed plan type"}, "notes": {"title": "Notes", "maxLength": 255, "type": "string", "description": "notes for plan"}, "skill_id": {"title": "Skill Id", "exclusiveMinimum": 0.0, "type": "integer", "description": "skill_id is related to skill collection"}, "task": {"title": "Task", "type": "array", "items": {"$ref": "#/components/schemas/TaskResponse"}, "description": "task list for plan", "default": []}, "start_date": {"title": "Start Date", "type": "string", "description": "start date of plan", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of plan, must be none or greater than start_date", "format": "date-time"}, "status": {"title": "Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "status of plan from fixed list of values"}}, "example": {"id": "954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0", "plan_type": {"id": 1, "name": "course"}, "notes": "It is a note for the planning", "skill_id": 1, "profile_id": 1, "start_date": "2022-12-11T12:00:26.168472+00:00", "end_date": "2022-12-12T12:00:26.168478+00:00", "task": [{"id": 1, "description": "It is a task for the planning", "status": {"id": 1, "name": "active"}}]}}, "PlanListDataResponse": {"title": "PlanListDataResponse", "required": ["plans"], "type": "object", "properties": {"plans": {"title": "Plans", "type": "array", "items": {"$ref": "#/components/schemas/PlanCreateResponse"}}}}, "PlanTypeEnum": {"title": "PlanTypeEnum", "enum": [1, 2], "type": "integer", "description": "An enumeration."}, "ProfileBasicForAdminRequest": {"title": "ProfileBasicForAdminRequest", "type": "object", "properties": {"profile_id": {"title": "Profile Id", "type": "string", "description": "profile id of the user for update", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "email": {"title": "Email", "type": "string", "description": "Email address of the user", "format": "email"}, "name": {"title": "Name", "maxLength": 20, "minLength": 2, "type": "string", "description": "name of the user"}, "date_of_birth": {"title": "Date Of Birth", "type": "string", "description": "date of birth of the user", "format": "date"}, "gender": {"allOf": [{"$ref": "#/components/schemas/GenderEnum"}], "description": "gender of the user"}, "mobile": {"title": "Mobile", "type": "string", "description": "mobile number of the user"}, "address": {"title": "Address", "maxLength": 255, "type": "string", "description": "address of the user"}, "designation_id": {"title": "Designation Id", "minimum": 1.0, "type": "integer", "description": "designation id of the given designation or user"}, "profile_status": {"allOf": [{"$ref": "#/components/schemas/ProfileStatusEnum"}], "description": "profile status of the user\n    \n    full_time: 1, part_time: 2, delete: 3, inactive: 4\n    ", "default": 4}, "designation_status": {"allOf": [{"$ref": "#/components/schemas/DesignationStatusEnum"}], "description": "designation status of user\n    active: 1, inactive: 2\n    ", "default": 2}, "about": {"title": "About", "maxLength": 256, "type": "string", "description": "description of the user"}}}, "ProfileBasicRequest": {"title": "ProfileBasicRequest", "type": "object", "properties": {"profile_id": {"title": "Profile Id", "type": "string", "description": "profile id of the user for update", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "email": {"title": "Email", "type": "string", "description": "Email address of the user", "format": "email"}, "name": {"title": "Name", "maxLength": 20, "minLength": 2, "type": "string", "description": "name of the user"}, "date_of_birth": {"title": "Date Of Birth", "type": "string", "description": "date of birth of the user", "format": "date"}, "gender": {"allOf": [{"$ref": "#/components/schemas/GenderEnum"}], "description": "gender of the user", "default": 3}, "mobile": {"title": "Mobile", "type": "string", "description": "mobile number of the user"}, "address": {"title": "Address", "maxLength": 255, "type": "string", "description": "address of the user"}, "designation_id": {"title": "Designation Id", "minimum": 1.0, "type": "integer", "description": "designation id of the given designation or user"}, "about": {"title": "About", "maxLength": 256, "type": "string", "description": "description of the user"}}}, "ProfileBasicResponse": {"title": "ProfileBasicResponse", "type": "object", "properties": {"name": {"title": "Name", "maxLength": 20, "minLength": 2, "type": "string", "description": "name of the user"}, "id": {"title": "Id", "anyOf": [{"type": "string", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, {"type": "string"}], "description": "id of the user profile"}, "url": {"title": "Url", "type": "string", "description": "api endpoint for profile details by id"}, "email": {"title": "Email", "type": "string", "description": "email address of the user", "format": "email"}, "mobile": {"title": "Mobile", "type": "string", "description": "mobile number of the user"}, "designation": {"title": "Designation", "allOf": [{"$ref": "#/components/schemas/DesignationDataResponse"}], "description": "designation basic details of the profile user"}, "skills": {"title": "Skills", "type": "array", "items": {"$ref": "#/components/schemas/ProfileSkillDataResponse"}}}, "example": {"id": "954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0", "_url": "/admin/user-profiles/954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0", "email": "developer.ixorasolution@gmail.com", "name": "Chelsey Adams", "mobile": "+01611123456", "designation": {"designation_id": 1, "designation": "Software Engineer"}, "skills": [{"experience_year": 4, "level": 4, "skill_name": "react", "skill_id": 1}, {"experience_year": 4, "level": 7, "skill_name": "django", "skill_id": 2}]}}, "ProfileDesignationDetailsResponse": {"title": "ProfileDesignationDetailsResponse", "required": ["designation"], "type": "object", "properties": {"designation": {"$ref": "#/components/schemas/ProfileDesignationResponse"}}}, "ProfileDesignationResponse": {"title": "ProfileDesignationResponse", "type": "object", "properties": {"designation": {"title": "Designation", "minLength": 2, "type": "string", "description": "designation of the user"}, "designation_id": {"title": "Designation Id", "minimum": 1.0, "type": "integer", "description": "id of designation"}, "start_date": {"title": "Start Date", "type": "string", "description": "start date of designated job", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of designated job", "format": "date-time"}, "designation_status": {"title": "Designation Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "designation status of designated job"}}}, "ProfileDetailsResponse": {"title": "ProfileDetailsResponse", "type": "object", "properties": {"id": {"title": "Id", "type": "string", "description": "id of the user profile", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "email": {"title": "Email", "type": "string", "description": "email address of the user"}, "personal_details": {"$ref": "#/components/schemas/ProfilePersonalDetailsResponse"}, "profile_status": {"title": "Profile Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "profile status/ job type of the user"}}, "example": {"id": "fc48802c-4fbc-49bc-8df4-e5ffcfdb1447", "email": "developer.ixorasolution@gmail.com", "personal_details": {"name": "Chelsey Adams", "date_of_birth": "2007-10-08", "gender": {"id": 1, "name": "male"}, "mobile": "+01611123456", "address": "House: X, State:Y, Z, Country", "about": "about the user", "picture_url": "/admin/files/response/42242mjj2424", "experience_year": 4}, "profile_status": {"id": 1, "name": "active"}}}, "ProfileEducationDetailsResponse": {"title": "ProfileEducationDetailsResponse", "required": ["educations"], "type": "object", "properties": {"educations": {"title": "Educations", "type": "array", "items": {"$ref": "#/components/schemas/ProfileEducationResponse"}}}}, "ProfileEducationResponse": {"title": "ProfileEducationResponse", "type": "object", "properties": {"degree_name": {"title": "Degree Name", "maxLength": 30, "type": "string", "description": "degree name of the user education"}, "school_name": {"title": "School Name", "maxLength": 30, "type": "string", "description": "school name of the user education"}, "passing_year": {"title": "Passing Year", "maxLength": 4, "type": "string", "description": "passing year of the user education"}, "grade": {"title": "Grade", "maximum": 5.0, "minimum": 2.5, "type": "number"}, "education_id": {"title": "Education Id", "exclusiveMinimum": 0.0, "type": "integer", "description": "id of the user education"}, "status": {"title": "Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "status of the education"}}}, "ProfileExperienceDesignationResponse": {"title": "ProfileExperienceDesignationResponse", "type": "object", "properties": {"designation_id": {"title": "Designation Id", "type": "integer", "description": "designation id for profile experience"}, "designation": {"title": "Designation", "type": "string", "description": "designation for profile experience"}}}, "ProfileExperienceDetailsResponse": {"title": "ProfileExperienceDetailsResponse", "required": ["experiences"], "type": "object", "properties": {"experiences": {"title": "Experiences", "type": "array", "items": {"$ref": "#/components/schemas/ProfileExperienceResponse"}}}}, "ProfileExperienceResponse": {"title": "ProfileExperienceResponse", "type": "object", "properties": {"experience_id": {"title": "Experience Id", "minimum": 1.0, "type": "integer", "description": "autoincrement experience id for this profile"}, "company_name": {"title": "Company Name", "maxLength": 30, "type": "string", "description": "name of company that user worked on"}, "job_responsibility": {"title": "Job Responsibility", "maxLength": 255, "type": "string", "description": "responsibility for job on the company"}, "designation": {"title": "Designation", "allOf": [{"$ref": "#/components/schemas/ProfileExperienceDesignationResponse"}], "description": "designation for this profile experience"}, "start_date": {"title": "Start Date", "type": "string", "description": "start date of experience", "format": "date-time"}, "end_date": {"title": "End Date", "type": "string", "description": "end date of experience", "format": "date-time"}, "status": {"title": "Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "designation status of experience"}}}, "ProfilePersonalDetailsResponse": {"title": "ProfilePersonalDetailsResponse", "required": ["cv_urls"], "type": "object", "properties": {"name": {"title": "Name", "maxLength": 20, "minLength": 2, "type": "string", "description": "name of the user"}, "date_of_birth": {"title": "Date Of Birth", "type": "string", "description": "date of birth of the user", "format": "date"}, "gender": {"title": "Gender", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "gender of the user"}, "mobile": {"title": "Mobile", "type": "string", "description": "mobile number of the user"}, "address": {"title": "Address", "maxLength": 255, "type": "string", "description": "address of the user"}, "about": {"title": "About", "maxLength": 500, "type": "string", "description": "about of the user"}, "picture_url": {"title": "Picture Url", "maxLength": 255, "type": "string", "description": "image response api url of user profile picture"}, "experience_year": {"title": "Experience Year", "type": "integer", "description": "experience year of the user"}, "cv_urls": {"title": "Cv Urls", "maxItems": 3, "type": "array", "items": {"$ref": "#/components/schemas/FileResponse"}, "description": "cv urls of the user"}}}, "ProfileResponse": {"title": "ProfileResponse", "required": ["designation", "skills", "experiences", "educations"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "description": "id of the user profile", "examples": ["5eb7cf5a86d9755df3a6c593", "5eb7cfb05e32e07750a1756a"]}, "email": {"title": "Email", "type": "string", "description": "email address of the user", "format": "email"}, "designation": {"title": "Designation", "allOf": [{"$ref": "#/components/schemas/ProfileDesignationResponse"}], "description": "designation details of the profile user"}, "skills": {"title": "Skills", "type": "array", "items": {"$ref": "#/components/schemas/ProfileSkillResponse"}}, "experiences": {"title": "Experiences", "type": "array", "items": {"$ref": "#/components/schemas/ProfileExperienceResponse"}}, "educations": {"title": "Educations", "type": "array", "items": {"$ref": "#/components/schemas/ProfileEducationResponse"}}, "personal_details": {"$ref": "#/components/schemas/ProfilePersonalDetailsResponse"}, "profile_status": {"title": "Profile Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "profile status/ job type of the user"}}, "example": {"id": "954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0", "email": "developer.ixorasolution@gmail.com", "designation": {"designation": "Software Engineer", "designation_id": 1, "start_date": "2022-12-11T12:00:25.991285+00:00", "end_date": "2022-12-12T12:00:25.991294+00:00", "designation_status": {"id": 1, "name": "active"}}, "personal_details": {"name": "Chelsey Adams", "date_of_birth": "1995-07-26", "gender": {"id": 1, "name": "female"}, "mobile": "+01611123456", "address": "House: X, State:Y, Z, Country", "about": "Personal Information", "experience_year": 4, "_picture_url": "/files/2"}, "skills": [{"skill_id": 1, "skill_name": "react", "skill_type": {"id": 1, "name": "core_skill"}, "skill_category": [{"id": 1, "name": "frontend"}, {"id": 2, "name": "backend"}], "experience_year": 4, "number_of_projects": 4, "level": 5, "training_duration": 2, "achievements": "1", "achievements_description": "It is the achievement's description", "certificate": "1", "status": {"id": 1, "name": "active"}, "certificate_files": [{"file_name": "certificate.pdf", "url": "/files/1"}]}], "experiences": [{"experience_id": 1, "company_name": "X Software", "job_responsibility": "Backend Development", "designation": {"designation_id": 1, "designation": "Software Developer"}, "start_date": "2020-03-16T12:00:25.991320+00:00", "end_date": "2021-07-29T12:00:25.991324+00:00", "status": {"id": 1, "name": "active"}}, {"experience_id": 2, "company_name": "Y Software", "job_responsibility": "Backend Development", "designation": {"designation_id": 1, "designation": "Software Engineer"}, "start_date": "2021-07-29T12:00:25.991345+00:00", "end_date": "2022-05-25T12:00:25.991353+00:00", "status": {"id": 1, "name": "active"}}], "educations": [{"education_id": 2, "degree_name": "B.Sc in Computer Science", "school_name": "University of Dhaka", "passing_year": "2019", "grade": 4.0}, {"education_id": 1, "degree_name": "HSC", "school_name": "Dhaka Secondary and Higher Secondary Education Board", "passing_year": "2015", "grade": 5.0}], "profile_status": {"id": 1, "name": "full_time"}}}, "ProfileSkillDataResponse": {"title": "ProfileSkillDataResponse", "type": "object", "properties": {"skill_id": {"title": "Skill Id", "type": "integer", "description": "id of skill"}, "experience_year": {"title": "Experience Year", "maximum": 45.0, "type": "integer", "description": "experience of the indicated skill"}, "level": {"title": "Level", "maximum": 10.0, "minimum": 1.0, "type": "integer", "description": "level of proficiency on the skill"}, "skill_name": {"title": "Skill Name", "maxLength": 20, "type": "string", "description": "name of skill from fixed list of values"}}, "example": {"experience_year": 4, "level": 6, "skill_name": "react", "skill_id": 1}}, "ProfileSkillDetailsResponse": {"title": "ProfileSkillDetailsResponse", "required": ["skills"], "type": "object", "properties": {"skills": {"title": "Skills", "type": "array", "items": {"$ref": "#/components/schemas/ProfileSkillResponse"}}}}, "ProfileSkillResponse": {"title": "ProfileSkillResponse", "required": ["certificate_files"], "type": "object", "properties": {"skill_id": {"title": "Skill Id", "type": "integer", "description": "id of skill"}, "skill_type": {"title": "Skill Type", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "type of skill from fixed list of values"}, "skill_category": {"title": "Skill Category", "maxItems": 7, "type": "array", "items": {"$ref": "#/components/schemas/ResponseEnumData"}, "description": "category of skill from fixed list of items"}, "skill_name": {"title": "Skill Name", "maxLength": 20, "type": "string", "description": "name of skill from fixed list of values"}, "status": {"title": "Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "status of skill from fixed list of values"}, "certificate_files": {"title": "Certificate Files", "type": "array", "items": {"$ref": "#/components/schemas/FileResponse"}, "description": "file response api url of the certificate files"}, "experience_year": {"title": "Experience Year", "maximum": 45.0, "type": "integer", "description": "experience of the indicated skill"}, "number_of_projects": {"title": "Number Of Projects", "maximum": 80.0, "type": "integer", "description": "number of projects on that skill"}, "level": {"title": "Level", "maximum": 10.0, "minimum": 1.0, "type": "integer", "description": "level of proficiency on the skill"}, "training_duration": {"title": "Training Duration", "maximum": 100.0, "type": "integer", "description": "training duration in months"}, "achievements": {"title": "Achievements", "maxLength": 1, "type": "string", "description": "marker for having the achievements\n\n    0 or 1"}, "achievements_description": {"title": "Achievements Description", "maxLength": 255, "type": "string", "description": "description of the achievement"}, "certificate": {"title": "Certificate", "maxLength": 1, "type": "string", "description": "marker for having the certificate\n\n    0 or 1"}}}, "ProfileStatusEnum": {"title": "ProfileStatusEnum", "enum": [1, 2, 3, 4], "type": "integer", "description": "An enumeration."}, "ResponseEnumData": {"title": "ResponseEnumData", "type": "object", "properties": {"id": {"title": "Id", "exclusiveMinimum": 0.0, "type": "integer", "description": "id is enum value"}, "name": {"title": "Name", "type": "string", "description": "name is enum key"}}}, "SkillCategoryEnum": {"title": "SkillCategoryEnum", "enum": [1, 2, 3, 4, 5, 6, 7], "type": "integer", "description": "An enumeration."}, "SkillCertificateResponse": {"title": "SkillCertificateResponse", "type": "object", "properties": {"succeed_upload_list": {"title": "Succeed Upload List", "type": "array", "items": {"type": "string"}, "default": []}, "failed_upload_list": {"title": "Failed Upload List", "type": "array", "items": {"type": "string"}, "default": []}}}, "StatusEnum": {"title": "StatusEnum", "enum": [1, 2, 3], "type": "integer", "description": "An enumeration."}, "SuccessMessage": {"title": "SuccessMessage", "type": "object", "properties": {"detail": {"title": "Detail", "type": "string", "default": "An success message"}}}, "TaskCreate": {"title": "TaskCreate", "type": "object", "properties": {"description": {"title": "Description", "maxLength": 255, "type": "string", "description": "description of task", "default": ""}, "task_id": {"title": "Task Id", "type": "integer", "description": "id of task for plan creation "}, "status": {"allOf": [{"$ref": "#/components/schemas/StatusEnum"}], "description": "status of task\n    \n    1: active, 3: delete"}}}, "TaskResponse": {"title": "TaskResponse", "type": "object", "properties": {"description": {"title": "Description", "maxLength": 255, "type": "string", "description": "description of task"}, "id": {"title": "Id", "minimum": 1.0, "type": "integer", "description": "autoincrement id of task"}, "status": {"title": "Status", "allOf": [{"$ref": "#/components/schemas/ResponseEnumData"}], "description": "status of skill from fixed list of values"}}}, "UserStatusEnum": {"title": "UserStatusEnum", "enum": [1, 3], "type": "integer", "description": "An enumeration."}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}, "securitySchemes": {"JWTBearer": {"type": "http", "scheme": "bearer"}, "JWTBearerAdmin": {"type": "http", "scheme": "bearer"}, "JWTBearerInactive": {"type": "http", "scheme": "bearer"}}}}