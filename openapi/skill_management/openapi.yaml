openapi: 3.0.2
info:
  title: SkillManagementApp
  description: Skill Management Application
  version: 1.0.0
servers:
- url: /
paths:
  /api/v1/profile/plans:
    post:
      tags:
      - plan
      summary: Create Plan By User
      description: |-
        **Create:** must provide *"skill_id"*, *"start_date"*, *"end_date"*, *"plan_type"* for creating a plan.

        **Update:** must provide *"plan_id"* for plan update and *"task_id"* for task update. Others are optional.
      operationId: create_plan_by_user_api_v1_profile_plans_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanCreateRequest'
            examples:
              CREATE:
                summary: Create Body
                description: a example of body for create operation
                value:
                  plan_type: 1
                  notes: It is a note for the planning
                  skill_id: 1
                  status: 1
                  start_date: 2022-11-24T11:59:28.549417+00:00
                  end_date: 2022-11-25T11:59:28.549421+00:00
                  task:
                  - description: It is a task for the planning
                    status: 1
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  plan_id: 954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0
                  plan_type: 1
                  notes: It is a note for the planning
                  skill_id: 1
                  start_date: 2022-11-24T11:59:28.549417+00:00
                  end_date: 2022-11-25T11:59:28.549421+00:00
                  delete_tasks:
                  - 2
                  status: 1
                  task:
                  - description: It is a task for the planning
                    status: 2
        required: true
      responses:
        201:
          description: The plan is successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanCreateResponse'
        400:
          description: The plan is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/admin/profile/plans:
    post:
      tags:
      - plan
      summary: Create Plan By Admin
      description: |-
        **Create:** must provide *"skill_id"*, *"profile_id"*, *"start_date"*, *"end_date"*, *"plan_type"* for creating a plan.

        **Update:** must provide *"plan_id"* and *"profile_id"* for plan update and *"task_id"* for task update. Others are optional.
      operationId: create_plan_by_admin_api_v1_admin_profile_plans_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanCreateAdminRequest'
            examples:
              CREATE:
                summary: Create Body
                description: a example of body for create operation
                value:
                  profile_id: 2c86e42a-ba65-4ca2-8fc5-5239024a56f6
                  plan_type: 1
                  notes: It is a note for the planning
                  skill_id: 1
                  status: 1
                  start_date: 2022-11-24T11:59:28.549417+00:00
                  end_date: 2022-11-25T11:59:28.549421+00:00
                  task:
                  - description: It is a task for the planning
                    status: 1
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  profile_id: fcd84e8c-a5cf-4f70-be28-0848c10d45b0
                  plan_id: 954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0
                  plan_type: 1
                  notes: It is a note for the planning
                  skill_id: 1
                  start_date: 2022-11-24T11:59:28.549417+00:00
                  end_date: 2022-11-25T11:59:28.549421+00:00
                  delete_tasks:
                  - 2
                  status: 1
                  task:
                  - description: It is a task for the planning
                    status: 2
        required: true
      responses:
        201:
          description: The plan is successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanCreateResponse'
        400:
          description: The plan is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/profile/skills:
    post:
      tags:
      - skill
      summary: Create Skill
      description: |-
        **Create:** Must provide all the data necessary including *"skill_id"* for creating a new skill. *"status"* is optional.


        **Update:** For update purposes provide *"skill_id"*. Other attributes are optional.
      operationId: create_skill_api_v1_profile_skills_post
      requestBody:
        content:
          application/json:
            schema:
              title: Skill
              description: provide all required attributes to create a new skill
              allOf:
              - $ref: '#/components/schemas/CreateSkillDataRequest'
            examples:
              CREATE:
                summary: Create Body
                description: a example of body for create operation
                value:
                  skill_id: 1
                  experience_year: 4
                  number_of_projects: 4
                  level: 5
                  training_duration: 2
                  achievements: "1"
                  achievements_description: It is the achievement's description
                  certificate: "1"
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  skill_id: 1
                  experience_year: 4
                  number_of_projects: 4
                  level: 5
                  training_duration: 2
                  achievements: "1"
                  achievements_description: It is the achievement's description
                  certificate: "1"
                  status: 2
        required: true
      responses:
        201:
          description: The skill is successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSkillListDataResponse'
        400:
          description: The skill is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/admin/profile/skills:
    post:
      tags:
      - skill
      summary: Create Skill By Admin
      description: |-
        **Create:** Must provide all the data necessary including *"skill_id"* for creating a new skill. *"status"* is optional.


        **Update:** For update purposes provide *"skill_id"*. Other attributes are optional.
      operationId: create_skill_by_admin_api_v1_admin_profile_skills_post
      requestBody:
        content:
          application/json:
            schema:
              title: Skill Request
              description: provide all required attributes to create a new skill
              allOf:
              - $ref: '#/components/schemas/CreateSkillDataAdminRequest'
            examples:
              CREATE:
                summary: Create Body
                description: a example of body for create operation
                value:
                  profile_id: 0f023196-830c-4618-9bfa-2b321a7cb94c
                  skill_id: 1
                  experience_year: 4
                  number_of_projects: 4
                  level: 5
                  training_duration: 2
                  achievements: "1"
                  achievements_description: It is the achievement's description
                  certificate: "1"
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  profile_id: e9de7523-5a32-420c-bdf5-e0d5bbbf49ef
                  skill_id: 1
                  experience_year: 4
                  number_of_projects: 4
                  level: 5
                  training_duration: 2
                  achievements: "1"
                  achievements_description: It is the achievement's description
                  certificate: "1"
                  status: 2
        required: true
      responses:
        201:
          description: The skill is successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSkillListDataResponse'
        400:
          description: The skill is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearerAdmin: []
  /api/v1/profile/skills/upload-certificate:
    post:
      tags:
      - skill
      summary: Upload Certificate
      operationId: upload_certificate_api_v1_profile_skills_upload_certificate_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_certificate_api_v1_profile_skills_upload_certificate_post'
      responses:
        201:
          description: The certificates are successfully uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillCertificateResponse'
        400:
          description: The certificates are not uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/skills/{skill-id}:
    get:
      tags:
      - skill
      summary: Get Skill
      operationId: get_skill_api_v1_skills__skill_id__get
      parameters:
      - name: skill-id
        in: path
        description: provide skill id to get skill information
        required: true
        style: simple
        explode: false
        schema:
          title: Skill-Id
          type: integer
          description: provide skill id to get skill information
          format: int32
      responses:
        200:
          description: The skill requested by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkillDataResponse'
        404:
          description: The skill details is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/skills:
    get:
      tags:
      - skill
      summary: Get Skill List
      operationId: get_skill_list_api_v1_skills_get
      parameters:
      - name: skill-category
        in: query
        description: "input skill category as string\n                           \
          \                                               \n    frontend: 1, backend:\
          \ 2, devops: 3, qa: 4, database: 5, network: 6, fullstack: 7"
        required: false
        style: form
        explode: true
        schema:
          description: "input skill category as string\n                         \
            \                                                 \n    frontend: 1, backend:\
            \ 2, devops: 3, qa: 4, database: 5, network: 6, fullstack: 7"
          allOf:
          - $ref: '#/components/schemas/SkillCategoryEnum'
      - name: skill-name
        in: query
        description: input skill name as string
        required: false
        style: form
        explode: true
        schema:
          title: Skill-Name
          type: string
          description: input skill name as string
      responses:
        200:
          description: The skill list requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSkillDataResponseList'
        404:
          description: The skill list is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/admin/user-profiles:
    get:
      tags:
      - profile
      summary: Get User Profiles For Admin
      operationId: get_user_profiles_for_admin_api_v1_admin_user_profiles_get
      parameters:
      - name: skill-id
        in: query
        description: input skill id as integer
        required: false
        style: form
        explode: true
        schema:
          title: Skill-Id
          type: integer
          description: input skill id as integer
          format: int32
      - name: employee-name
        in: query
        description: input employee name as string
        required: false
        style: form
        explode: true
        schema:
          title: Employee-Name
          type: string
          description: input employee name as string
      - name: mobile
        in: query
        description: input mobile as string
        required: false
        style: form
        explode: true
        schema:
          title: Mobile
          type: string
          description: input mobile as string
      - name: email
        in: query
        description: input email as string
        required: false
        style: form
        explode: true
        schema:
          title: Email
          type: string
          description: input email as string
      - name: profile-status
        in: query
        description: profile status as enum
        required: false
        style: form
        explode: true
        schema:
          description: profile status as enum
          allOf:
          - $ref: '#/components/schemas/ProfileStatusEnum'
      - name: page-number
        in: query
        description: page number of pagination
        required: false
        style: form
        explode: true
        schema:
          title: Page-Number
          type: integer
          description: page number of pagination
          format: int32
          default: 1
      - name: page-size
        in: query
        description: number of element in page
        required: false
        style: form
        explode: true
        schema:
          title: Page-Size
          type: integer
          description: number of element in page
          format: int32
          default: 10
      responses:
        200:
          description: The profile basic details is requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileResponse'
        404:
          description: The profile basic details is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/admin/user-profiles/{profile-id}:
    get:
      tags:
      - profile
      summary: Get User Profile By Id For Admin
      operationId: get_user_profile_by_id_for_admin_api_v1_admin_user_profiles__profile_id__get
      parameters:
      - name: profile-id
        in: path
        description: input profile id of the user
        required: true
        style: simple
        explode: false
        schema:
          title: Profile-Id
          type: string
          description: input profile id of the user
          format: uuid
      - name: profile-status
        in: query
        required: true
        style: form
        explode: true
        schema:
          title: Profile-Status
          maximum: 2.0
          minimum: 1.0
          type: integer
          format: int32
      responses:
        200:
          description: The profile details is requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        404:
          description: The profile details is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearerAdmin: []
  /api/v1/user-profiles/:
    post:
      tags:
      - profile
      summary: Create User Profile By User
      description: |-
        **Create:** Must provide *"email"*, *"name"*, *"designation_id"* except *"profile_id"*. Other attributes are optional.


        **Update:** Must provide *"profile_id"*. Should not provide *"email"*, *"name"*, *"designation_id"*. Other attributes are optional.
      operationId: create_user_profile_by_user_api_v1_user_profiles__post
      requestBody:
        content:
          application/json:
            schema:
              title: Profile
              description: input profile data
              allOf:
              - $ref: '#/components/schemas/ProfileBasicRequest'
            examples:
              CREATE:
                summary: Create Body
                description: a example of body for create operation
                value:
                  email: developer.ixorasolution@gmail.com
                  name: Chelsey Adams
                  date_of_birth: 1995-07-21
                  gender: 2
                  mobile: +01611123456
                  address: 'House: X, State:Y, Z, Country'
                  designation_id: 1
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  profile_id: 0ed58a05-2701-4aa3-88cd-dd3aa2ef07c2
                  date_of_birth: 1995-07-21
                  gender: 2
                  mobile: +01611123456
                  address: 'House: X, State:Y, Z, Country'
        required: true
      responses:
        200:
          description: The profile details is requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        404:
          description: The profile details is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/admin/user-profiles/:
    post:
      tags:
      - profile
      summary: Create Or Update User Profile By Admin
      description: |-
        **Create:** Must provide *"email"*, *"name"*, *"designation_id"* except *"profile_id"*. Other attributes are optional.


        **Update:** Must provide *"profile_id"*. Should not provide *"email"*. Other attributes are optional.
      operationId: create_or_update_user_profile_by_admin_api_v1_admin_user_profiles__post
      requestBody:
        content:
          application/json:
            schema:
              title: Profile
              description: input profile data
              allOf:
              - $ref: '#/components/schemas/ProfileBasicForAdminRequest'
            examples:
              CREATE:
                summary: Create Body
                description: An example of body for create operation
                value:
                  email: developer.ixorasolution@gmail.com
                  name: Chelsey Adams
                  date_of_birth: 1995-07-21
                  gender: 2
                  mobile: +01611123456
                  address: 'House: X, State:Y, Z, Country'
                  designation_id: 1
                  profile_status: 1
                  designation_status: 1
              UPDATE:
                summary: Update Body
                description: An example of body for update operation
                value:
                  profile_id: 1bfe44d5-aff3-4eaa-aba4-8efc7a963d6d
                  name: Chelsey Adams
                  date_of_birth: 1995-07-21
                  gender: 2
                  mobile: +01611123456
                  address: 'House: X, State:Y, Z, Country'
                  designation_id: 1
                  profile_status: 1
                  designation_status: 1
        required: true
      responses:
        200:
          description: The profile details is requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        404:
          description: The profile details is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        400:
          description: The profile details is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearerAdmin: []
  /api/v1/profile/experiences:
    post:
      tags:
      - experience
      summary: Create Experience By User
      description: |-
        **Create:** Must provide all the data except *"experience_id"*. *"status"* is optional.


        **Update:** Must provide *"experience_id"*. Other attributes are optional.
      operationId: create_experience_by_user_api_v1_profile_experiences_post
      requestBody:
        content:
          application/json:
            schema:
              title: Experience Request
              description: input experience data
              allOf:
              - $ref: '#/components/schemas/ExperienceCreateRequest'
            examples:
              CREATE:
                summary: Create Body
                description: a example of body for create operation
                value:
                  company_name: X Software
                  job_responsibility: Backend Development
                  designation: Software Engineer
                  start_date: 2021-07-12T11:55:30.858969+00:00
                  end_date: 2022-05-08T11:55:30.858980+00:00
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  experience_id: 1
                  company_name: X Software
                  job_responsibility: Backend Development
                  designation: Software Engineer
                  start_date: 2021-07-12T11:55:30.858969+00:00
                  end_date: 2022-05-08T11:55:30.858980+00:00
                  status: 2
        required: true
      responses:
        201:
          description: The experience is successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceListDataResponse'
        400:
          description: The experience is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/admin/profile/experiences:
    post:
      tags:
      - experience
      summary: Create Experience By Admin
      description: |-
        **Create:** Must provide all the data except *"experience_id"*. *"status"* is optional.


        **Update:** Must provide *"experience_id"*. Other attributes are optional.
      operationId: create_experience_by_admin_api_v1_admin_profile_experiences_post
      requestBody:
        content:
          application/json:
            schema:
              title: Experience Request
              description: input experience data
              allOf:
              - $ref: '#/components/schemas/ExperienceCreateAdminRequest'
            examples:
              CREATE:
                summary: Create Body
                description: a example of body for create operation
                value:
                  profile_id: aebe35e1-f745-40ae-abde-dcc3b89af4a8
                  company_name: X Software
                  job_responsibility: Backend Development
                  designation: Software Engineer
                  start_date: 2021-07-12T11:55:30.858969+00:00
                  end_date: 2022-05-08T11:55:30.858980+00:00
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  experience_id: 1
                  profile_id: 9e778971-95e6-4f2b-8d87-a0bb4883697f
                  company_name: X Software
                  job_responsibility: Backend Development
                  designation: Software Engineer
                  start_date: 2021-07-12T11:55:30.858969+00:00
                  end_date: 2022-05-08T11:55:30.858980+00:00
                  status: 2
        required: true
      responses:
        201:
          description: The experience is successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceListDataResponse'
        400:
          description: The experience is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearerAdmin: []
  /api/v1/profile/educations:
    post:
      tags:
      - education
      summary: Create Education By User
      description: |-
        **Create:** Must provide all the data except *"education_id"*. *"status"* is optional.


        **Update:** Must provide *"education_id"*. Other attributes are optional.
      operationId: create_education_by_user_api_v1_profile_educations_post
      requestBody:
        content:
          application/json:
            schema:
              title: Education Request
              description: input education data
              allOf:
              - $ref: '#/components/schemas/EducationCreateRequest'
            examples:
              CREATE:
                summary: Create Body
                description: a example of body for create operation
                value:
                  degree_name: B.Sc in Computer Science
                  school_name: University of Dhaka
                  passing_year: "2019"
                  grade: 3.8
                  status: 1
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  education_id: 1
                  degree_name: B.Sc in Computer Science
                  school_name: University of Dhaka
                  passing_year: "2019"
                  grade: 3.8
                  status: 1
        required: true
      responses:
        201:
          description: The education is successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationListDataResponse'
        400:
          description: The education is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/admin/profile/educations:
    post:
      tags:
      - education
      summary: Create Education By Admin
      description: |-
        **Create:** Must provide all the data except *"education_id"*. *"status"* is optional.


        **Update:** Must provide *"education_id"*. Other attributes are optional.
      operationId: create_education_by_admin_api_v1_admin_profile_educations_post
      requestBody:
        content:
          application/json:
            schema:
              title: Education Request
              description: input education data
              allOf:
              - $ref: '#/components/schemas/EducationCreateAdminRequest'
            examples:
              CREATE:
                summary: Create Body
                description: a example of body for create operation
                value:
                  profile_id: c2a91b29-b380-4025-a909-037d1649ec5c
                  degree_name: B.Sc in Computer Science
                  school_name: University of Dhaka
                  passing_year: "2019"
                  grade: 3.8
                  status: 1
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  profile_id: e3719516-d048-41aa-8208-c8122dc4eb0a
                  education_id: 1
                  degree_name: B.Sc in Computer Science
                  school_name: University of Dhaka
                  passing_year: "2019"
                  grade: 3.8
                  status: 1
        required: true
      responses:
        201:
          description: The education is successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationListDataResponse'
        400:
          description: The education is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearerAdmin: []
  /api/v1/profile/skills/upload-resume:
    post:
      tags:
      - file
      summary: Upload Resume
      operationId: upload_resume_api_v1_profile_skills_upload_resume_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_resume_api_v1_profile_skills_upload_resume_post'
        required: true
      responses:
        201:
          description: The resume is successfully uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResumeUploadResponse'
        400:
          description: The resume is not uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/profile/skills/upload-profile-picture:
    post:
      tags:
      - file
      summary: Upload Profile Picture
      operationId: upload_profile_picture_api_v1_profile_skills_upload_profile_picture_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_profile_picture_api_v1_profile_skills_upload_profile_picture_post'
        required: true
      responses:
        201:
          description: The profile picture  is successfully uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilePictureUploadResponse'
        400:
          description: The profile picture is not uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/file/{file-id}:
    get:
      tags:
      - file
      summary: Response File
      operationId: response_file_api_v1_file__file_id__get
      parameters:
      - name: file-id
        in: path
        description: input file id for file response
        required: true
        style: simple
        explode: false
        schema:
          title: File-Id
          type: integer
          description: input file id for file response
          format: int32
      responses:
        200:
          description: The profile picture is rendered
        400:
          description: The profile picture is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/designations/{designation-id}:
    get:
      tags:
      - designation
      summary: Get Designation
      operationId: get_designation_api_v1_designations__designation_id__get
      parameters:
      - name: designation-id
        in: path
        description: provide skill id to get skill information
        required: true
        style: simple
        explode: false
        schema:
          title: Designation-Id
          type: integer
          description: provide skill id to get skill information
          format: int32
      responses:
        200:
          description: The designation requested by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DesignationDataResponse'
        404:
          description: The designation details is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/designations:
    get:
      tags:
      - designation
      summary: Get Designation List
      operationId: get_designation_list_api_v1_designations_get
      parameters:
      - name: designation-name
        in: query
        description: input designation name as string
        required: false
        style: form
        explode: true
        schema:
          title: Designation-Name
          type: string
          description: input designation name as string
      responses:
        200:
          description: The designation list requested
          content:
            application/json:
              schema:
                title: Response Get Designation List Api V1 Designations Get
                type: array
                items:
                  $ref: '#/components/schemas/DesignationDataResponse'
        404:
          description: The designation list is not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/profile/designations:
    post:
      tags:
      - designation
      summary: Update Designation
      description: '**Update:** For update purposes provide *"start_date"* and *"end_date"*.'
      operationId: update_designation_api_v1_profile_designations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignationCreateRequest'
            examples:
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  start_date: 2019-08-24T14:15:22Z
                  end_date: 2020-12-24T14:15:22Z
        required: true
      responses:
        201:
          description: The designation is created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDesignationResponse'
        404:
          description: The designation is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearer: []
  /api/v1/admin/profile/designations:
    post:
      tags:
      - designation
      summary: Update Designation By Admin
      description: '**Update:** For update purposes provide *"start_date"* and *"end_date"*.'
      operationId: update_designation_by_admin_api_v1_admin_profile_designations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesignationCreateAdminRequest'
            examples:
              UPDATE:
                summary: Update Body
                description: a example of body for update operation
                value:
                  profile_id: a9b43369-249f-4ae9-b481-0b74c2510c28
                  start_date: 2019-08-24T14:15:22Z
                  end_date: 2020-12-24T14:15:22Z
                  designation_status: 2
        required: true
      responses:
        201:
          description: The designation is created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileDesignationResponse'
        404:
          description: The designation is not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        422:
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - JWTBearerAdmin: []
components:
  schemas:
    Body_upload_certificate_api_v1_profile_skills_upload_certificate_post:
      title: Body_upload_certificate_api_v1_profile_skills_upload_certificate_post
      type: object
      properties:
        files:
          title: Files
          type: array
          description: select certificate files to upload
          items:
            type: string
            format: binary
    Body_upload_profile_picture_api_v1_profile_skills_upload_profile_picture_post:
      title: Body_upload_profile_picture_api_v1_profile_skills_upload_profile_picture_post
      required:
      - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: select certificate files to upload
          format: binary
    Body_upload_resume_api_v1_profile_skills_upload_resume_post:
      title: Body_upload_resume_api_v1_profile_skills_upload_resume_post
      required:
      - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: select certificate files to upload
          format: binary
    CreateSkillDataAdminRequest:
      title: CreateSkillDataAdminRequest
      required:
      - profile_id
      - skill_id
      type: object
      properties:
        skill_id:
          title: Skill Id
          type: integer
          description: id of skill
          format: int32
        profile_id:
          title: Profile Id
          type: string
          description: id of the profile
        experience_year:
          title: Experience Year
          maximum: 45.0
          type: integer
          description: experience of the indicated skill
          format: int32
        number_of_projects:
          title: Number Of Projects
          maximum: 80.0
          type: integer
          description: number of projects on that skill
          format: int32
        level:
          title: Level
          maximum: 10.0
          minimum: 1.0
          type: integer
          description: level of proficiency on the skill
          format: int32
        training_duration:
          title: Training Duration
          maximum: 100.0
          type: integer
          description: training duration in months
          format: int32
        achievements:
          title: Achievements
          maxLength: 1
          type: string
          description: |-
            marker for having the achievements

                0 or 1
        achievements_description:
          title: Achievements Description
          maxLength: 255
          type: string
          description: description of the achievement
        certificate:
          title: Certificate
          maxLength: 1
          type: string
          description: |-
            marker for having the certificate

                0 or 1
        status:
          description: "skill data validity status \n\n    1: active, 3: delete"
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: "1"
      example:
        skill_id: 1
        experience_year: 4
        number_of_projects: 4
        level: 5
        training_duration: 2
        achievements: "1"
        achievements_description: It is the achievement's description
        certificate: "1"
        status: 1
    CreateSkillDataRequest:
      title: CreateSkillDataRequest
      required:
      - skill_id
      type: object
      properties:
        skill_id:
          title: Skill Id
          type: integer
          description: id of skill
          format: int32
        experience_year:
          title: Experience Year
          maximum: 45.0
          type: integer
          description: experience of the indicated skill
          format: int32
        number_of_projects:
          title: Number Of Projects
          maximum: 80.0
          type: integer
          description: number of projects on that skill
          format: int32
        level:
          title: Level
          maximum: 10.0
          minimum: 1.0
          type: integer
          description: level of proficiency on the skill
          format: int32
        training_duration:
          title: Training Duration
          maximum: 100.0
          type: integer
          description: training duration in months
          format: int32
        achievements:
          title: Achievements
          maxLength: 1
          type: string
          description: |-
            marker for having the achievements

                0 or 1
        achievements_description:
          title: Achievements Description
          maxLength: 255
          type: string
          description: description of the achievement
        certificate:
          title: Certificate
          maxLength: 1
          type: string
          description: |-
            marker for having the certificate

                0 or 1
        status:
          description: "skill data validity status \n\n    1: active, 3: delete"
          allOf:
          - $ref: '#/components/schemas/UserStatusEnum'
          default: "1"
      example:
        skill_id: 1
        experience_year: 4
        number_of_projects: 4
        level: 5
        training_duration: 2
        achievements: "1"
        achievements_description: It is the achievement's description
        certificate: "1"
        status: 1
    CreateSkillDataResponse:
      title: CreateSkillDataResponse
      type: object
      properties:
        skill_id:
          title: Skill Id
          type: integer
          description: id of skill
          format: int32
        skill_type:
          title: Skill Type
          description: type of skill from fixed list of values
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
        skill_category:
          title: Skill Category
          maxItems: 7
          type: array
          description: category of skill from fixed list of items
          items:
            $ref: '#/components/schemas/ResponseEnumData'
        skill_name:
          title: Skill Name
          maxLength: 20
          type: string
          description: name of skill from fixed list of values
        status:
          title: Status
          description: status of skill from fixed list of values
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
        experience_year:
          title: Experience Year
          maximum: 45.0
          type: integer
          description: experience of the indicated skill
          format: int32
        number_of_projects:
          title: Number Of Projects
          maximum: 80.0
          type: integer
          description: number of projects on that skill
          format: int32
        level:
          title: Level
          maximum: 10.0
          minimum: 1.0
          type: integer
          description: level of proficiency on the skill
          format: int32
        training_duration:
          title: Training Duration
          maximum: 100.0
          type: integer
          description: training duration in months
          format: int32
        achievements:
          title: Achievements
          maxLength: 1
          type: string
          description: |-
            marker for having the achievements

                0 or 1
        achievements_description:
          title: Achievements Description
          maxLength: 255
          type: string
          description: description of the achievement
        certificate:
          title: Certificate
          maxLength: 1
          type: string
          description: |-
            marker for having the certificate

                0 or 1
        certificates_url:
          title: Certificates Url
          type: array
          description: file response url of certificates
          items:
            $ref: '#/components/schemas/FileResponse'
      example:
        skill_id: 1
        skill_name: react
        skill_type:
          id: 1
          name: core_skill
        skill_category:
        - id: 1
          name: frontend
        - id: 2
          name: backend
        experience_year: 4
        number_of_projects: 4
        level: 5
        training_duration: 2
        achievements: "1"
        achievements_description: It is the achievement's description
        certificate: "1"
        status:
          id: 1
          name: active
        certificates_url:
        - file_name: certificate_file.pdf
          url: /files/1
    CreateSkillListDataResponse:
      title: CreateSkillListDataResponse
      required:
      - skills
      type: object
      properties:
        skills:
          title: Skills
          type: array
          items:
            $ref: '#/components/schemas/CreateSkillDataResponse'
    DesignationCreateAdminRequest:
      title: DesignationCreateAdminRequest
      required:
      - profile_id
      type: object
      properties:
        profile_id:
          title: Profile Id
          type: string
          description: id of profile
        start_date:
          title: Start Date
          type: string
          description: start date of designated job
          format: date-time
        end_date:
          title: End Date
          type: string
          description: |-
            end date of designated job

                > start_date
          format: date-time
        designation_status:
          description: |-
            designation data validity status

                1: active, 3: delete
          allOf:
          - $ref: '#/components/schemas/DesignationStatusEnum'
    DesignationCreateRequest:
      title: DesignationCreateRequest
      type: object
      properties:
        start_date:
          title: Start Date
          type: string
          description: start date of designated job
          format: date-time
        end_date:
          title: End Date
          type: string
          description: "end date of designated job\n    \n    > start_date"
          format: date-time
    DesignationDataResponse:
      title: DesignationDataResponse
      type: object
      properties:
        designation:
          title: Designation
          minLength: 2
          type: string
          description: designation of the user
        designation_id:
          title: Designation Id
          minimum: 1.0
          type: integer
          description: id of designation
          format: int32
    DesignationStatusEnum:
      title: DesignationStatusEnum
      type: integer
      description: An enumeration.
      format: int32
      enum:
      - 1
      - 2
    EducationCreateAdminRequest:
      title: EducationCreateAdminRequest
      required:
      - profile_id
      type: object
      properties:
        profile_id:
          title: Profile Id
          type: string
          description: profile_id of the user
        education_id:
          title: Education Id
          minimum: 1.0
          type: integer
          description: id of user's education
          format: int32
        degree_name:
          title: Degree Name
          maxLength: 30
          type: string
          description: degree name of the user's education
        school_name:
          title: School Name
          maxLength: 30
          type: string
          description: school name of the user's education
        passing_year:
          title: Passing Year
          maxLength: 4
          type: string
          description: passing year of the user's education
        grade:
          title: Grade
          maximum: 5.0
          minimum: 2.5
          type: number
          description: grade of the user's education'
        status:
          description: |-
            education data validity status

                1: active, 3: delete
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          default: "1"
      description: Must provide education id or other information[status is optional]
    EducationCreateRequest:
      title: EducationCreateRequest
      type: object
      properties:
        education_id:
          title: Education Id
          minimum: 1.0
          type: integer
          description: id of user's education
          format: int32
        degree_name:
          title: Degree Name
          maxLength: 30
          type: string
          description: degree name of the user's education
        school_name:
          title: School Name
          maxLength: 30
          type: string
          description: school name of the user's education
        passing_year:
          title: Passing Year
          maxLength: 4
          type: string
          description: passing year of the user's education
        grade:
          title: Grade
          maximum: 5.0
          minimum: 2.5
          type: number
          description: grade of the user's education'
        status:
          description: "education data validity status\n                         \
            \          \n    1: active, 3: delete"
          allOf:
          - $ref: '#/components/schemas/UserStatusEnum'
          default: "1"
      description: Must provide education id or other information[status is optional]
    EducationCreateResponse:
      title: EducationCreateResponse
      type: object
      properties:
        degree_name:
          title: Degree Name
          maxLength: 30
          type: string
          description: degree name of the user education
        school_name:
          title: School Name
          maxLength: 30
          type: string
          description: school name of the user education
        passing_year:
          title: Passing Year
          maxLength: 4
          type: string
          description: passing year of the user education
        grade:
          title: Grade
          maximum: 5.0
          minimum: 2.5
          type: number
        education_id:
          title: Education Id
          type: integer
          description: id of the user education
          format: int32
        status:
          $ref: '#/components/schemas/StatusEnum'
      example:
        education_id: 1
        degree_name: B.Sc in Computer Science
        school_name: University of Dhaka
        passing_year: "2019"
        grade: 3.8
        status: 1
    EducationListDataResponse:
      title: EducationListDataResponse
      required:
      - educations
      type: object
      properties:
        educations:
          title: Educations
          type: array
          items:
            $ref: '#/components/schemas/EducationCreateResponse'
    ErrorMessage:
      title: ErrorMessage
      type: object
      properties:
        detail:
          title: Detail
          type: string
          default: An error message
    ExperienceCreateAdminRequest:
      title: ExperienceCreateAdminRequest
      required:
      - profile_id
      type: object
      properties:
        profile_id:
          title: Profile Id
          type: string
          description: profile id for user
        experience_id:
          title: Experience Id
          minimum: 1.0
          type: integer
          description: id of experiment for user
          format: int32
        company_name:
          title: Company Name
          maxLength: 30
          type: string
          description: name of company that user worked on
        job_responsibility:
          title: Job Responsibility
          maxLength: 255
          type: string
          description: responsibility for job on the company
        designation:
          title: Designation
          type: string
          description: designation for profile experience
        start_date:
          title: Start Date
          type: string
          description: start date of experience
          format: date-time
        end_date:
          title: End Date
          type: string
          description: |-
            end date of experience

                > start_date
          format: date-time
        status:
          description: |-
            experience data validity status

                1: active, 3: delete
          allOf:
          - $ref: '#/components/schemas/UserStatusEnum'
          default: "1"
      example:
        company_name: X Software
        job_responsibility: Backend Development
        designation_id: 2
        start_date: 2021-07-24T13:39:59.628121+00:00
        end_date: 2022-05-20T13:39:59.628131+00:00
        status: 1
    ExperienceCreateRequest:
      title: ExperienceCreateRequest
      type: object
      properties:
        experience_id:
          title: Experience Id
          minimum: 1.0
          type: integer
          description: id of experiment for user
          format: int32
        company_name:
          title: Company Name
          maxLength: 30
          type: string
          description: name of company that user worked on
        job_responsibility:
          title: Job Responsibility
          maxLength: 255
          type: string
          description: responsibility for job on the company
        designation:
          title: Designation
          type: string
          description: designation for profile experience
        start_date:
          title: Start Date
          type: string
          description: start date of experience
          format: date-time
        end_date:
          title: End Date
          type: string
          description: "end date of experience\n    \n    > start_date"
          format: date-time
        status:
          description: "experience data validity status\n                        \
            \           \n    1: active, 3: delete"
          allOf:
          - $ref: '#/components/schemas/UserStatusEnum'
          default: "1"
      example:
        company_name: X Software
        job_responsibility: Backend Development
        designation_id: 2
        start_date: 2021-07-24T13:39:59.607295+00:00
        end_date: 2022-05-20T13:39:59.607309+00:00
        status: 1
    ExperienceCreateResponse:
      title: ExperienceCreateResponse
      type: object
      properties:
        experience_id:
          title: Experience Id
          minimum: 1.0
          type: integer
          description: autoincrement experience id for this profile
          format: int32
        company_name:
          title: Company Name
          maxLength: 30
          type: string
          description: name of company that user worked on
        job_responsibility:
          title: Job Responsibility
          maxLength: 255
          type: string
          description: responsibility for job on the company
        designation:
          title: Designation
          description: designation for this profile experience
          allOf:
          - $ref: '#/components/schemas/ProfileExperienceDesignationResponse'
        start_date:
          title: Start Date
          type: string
          description: start date of experience
          format: date-time
        end_date:
          title: End Date
          type: string
          description: end date of experience
          format: date-time
        status:
          title: Status
          description: designation status of experience
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
      example:
        experience_id: 1
        company_name: X Software
        job_responsibility: Backend Development
        designation:
          designation_id: 2
          designation: Software Developer
        start_date: 2021-07-24T13:39:59.616246+00:00
        end_date: 2022-05-20T13:39:59.616259+00:00
        status:
          id: 1
          name: active
    ExperienceListDataResponse:
      title: ExperienceListDataResponse
      required:
      - experiences
      type: object
      properties:
        experiences:
          title: Experiences
          type: array
          items:
            $ref: '#/components/schemas/ExperienceCreateResponse'
    FileResponse:
      title: FileResponse
      required:
      - url
      type: object
      properties:
        file_name:
          title: File Name
          type: string
          description: name of the file
        url:
          title: Url
          type: string
          description: api url of the file
    GenderEnum:
      title: GenderEnum
      type: integer
      description: An enumeration.
      format: int32
      enum:
      - 1
      - 2
      - 3
    GetSkillDataResponse:
      title: GetSkillDataResponse
      type: object
      properties:
        skill_id:
          title: Skill Id
          type: integer
          description: id of skill
          format: int32
        skill_type:
          title: Skill Type
          description: type of skill from fixed list of values
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
        skill_category:
          title: Skill Category
          maxItems: 7
          type: array
          description: category of skill from fixed list of items
          items:
            $ref: '#/components/schemas/ResponseEnumData'
        skill_name:
          title: Skill Name
          maxLength: 20
          type: string
          description: name of skill from fixed list of values
      example:
        id: 1
        skill_name: react
        skill_type:
          id: 1
          name: core_skill
        skill_category:
        - id: 1
          name: frontend
        - id: 2
          name: backend
    GetSkillDataResponseList:
      title: GetSkillDataResponseList
      type: object
      properties:
        skills:
          title: Skills
          type: array
          items:
            $ref: '#/components/schemas/GetSkillDataResponse'
      example:
        skills:
        - id: 1
          skill_name: react
          skill_type:
            id: 1
            name: core_skill
          skill_category:
          - id: 1
            name: frontend
          - id: 2
            name: backend
        - id: 2
          skill_name: django
          skill_type:
            id: 1
            name: core_skill
          skill_category:
          - id: 2
            name: backend
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    PaginatedProfileResponse:
      title: PaginatedProfileResponse
      type: object
      properties:
        previous_page:
          title: Previous Page
          type: integer
          description: previous page of current pagination page
          format: int32
        next_page:
          title: Next Page
          type: integer
          description: next page of current pagination page
          format: int32
        has_previous:
          title: Has Previous
          type: boolean
          description: bool indicator whether current page has previous page
        has_next:
          title: Has Next
          type: boolean
          description: bool indicator whether current page has next page
        total_items:
          title: Total Items
          type: integer
          description: total number of items
          format: int32
        pages:
          title: Pages
          type: integer
          description: total number of pages
          format: int32
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/ProfileBasicResponse'
      example:
        items:
        - id: 954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0
          _url: /admin/user-profiles/954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0
          email: developer.ixorasolution@gmail.com
          name: Chelsey Adams
          mobile: +01611123456
          designation:
            designation_id: 1
            designation: Software Engineer
          skills:
          - experience_year: 4
            level: 4
            skill_name: react
            skill_id: 1
          - experience_year: 4
            level: 7
            skill_name: django
            skill_id: 2
        previous_page: 0
        next_page: 2
        has_previous: false
        has_next: true
        total_items: 100
        pages: 10
    PlanCreateAdminRequest:
      title: PlanCreateAdminRequest
      required:
      - plan_id
      - profile_id
      type: object
      properties:
        plan_type:
          description: "the type of the plan\n    \n    1: course, 2: exam"
          allOf:
          - $ref: '#/components/schemas/PlanTypeEnum'
        notes:
          title: Notes
          maxLength: 255
          type: string
          description: notes for plan
        plan_id:
          title: Plan Id
          type: string
          description: id for plan
        skill_id:
          title: Skill Id
          type: integer
          description: skill_id is related to skill collection
          format: int32
        task:
          title: Task
          type: array
          items:
            $ref: '#/components/schemas/TaskCreate'
        start_date:
          title: Start Date
          type: string
          description: start date of plan
          format: date-time
        end_date:
          title: End Date
          type: string
          description: "end date of plan\n    \n    > start_date"
          format: date-time
        delete_tasks:
          title: Delete Tasks
          type: array
          description: list of task id to delete
          items:
            type: integer
            format: int32
        status:
          description: "status of plan\n    \n    1: active, 3: delete"
          allOf:
          - $ref: '#/components/schemas/UserStatusEnum'
          default: "1"
        profile_id:
          title: Profile Id
          type: string
          description: profile_id is related to profile collection
    PlanCreateRequest:
      title: PlanCreateRequest
      required:
      - plan_id
      type: object
      properties:
        plan_type:
          description: "the type of the plan\n    \n    1: course, 2: exam"
          allOf:
          - $ref: '#/components/schemas/PlanTypeEnum'
        notes:
          title: Notes
          maxLength: 255
          type: string
          description: notes for plan
        plan_id:
          title: Plan Id
          type: string
          description: id for plan
        skill_id:
          title: Skill Id
          type: integer
          description: skill_id is related to skill collection
          format: int32
        task:
          title: Task
          type: array
          items:
            $ref: '#/components/schemas/TaskCreate'
        start_date:
          title: Start Date
          type: string
          description: start date of plan
          format: date-time
        end_date:
          title: End Date
          type: string
          description: "end date of plan\n    \n    > start_date"
          format: date-time
        delete_tasks:
          title: Delete Tasks
          type: array
          description: list of task id to delete
          items:
            type: integer
            format: int32
        status:
          description: "status of plan\n    \n    1: active, 3: delete"
          allOf:
          - $ref: '#/components/schemas/UserStatusEnum'
          default: "1"
    PlanCreateResponse:
      title: PlanCreateResponse
      type: object
      properties:
        id:
          title: Id
          description: id of plan of type UUID
          anyOf:
          - type: string
            format: uuid4
          - type: string
        plan_type:
          title: Plan Type
          description: Fixed plan type
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
        notes:
          title: Notes
          maxLength: 255
          type: string
          description: notes for plan
        skill_id:
          title: Skill Id
          type: integer
          description: skill_id is related to skill collection
          format: int32
        task:
          title: Task
          type: array
          description: task list for plan
          items:
            $ref: '#/components/schemas/TaskResponse'
        start_date:
          title: Start Date
          type: string
          description: start date of plan
          format: date-time
        end_date:
          title: End Date
          type: string
          description: end date of plan, must be none or greater than start_date
          format: date-time
        status:
          title: Status
          description: status of plan from fixed list of values
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
      example:
        id: 954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0
        plan_type:
          id: 1
          name: course
        notes: It is a note for the planning
        skill_id: 1
        profile_id: 1
        start_date: 2022-12-06T13:40:00.532913+00:00
        end_date: 2022-12-07T13:40:00.532923+00:00
        task:
        - id: 1
          description: It is a task for the planning
          status:
            id: 1
            name: active
    PlanTypeEnum:
      title: PlanTypeEnum
      type: integer
      description: An enumeration.
      format: int32
      enum:
      - 1
      - 2
    ProfileBasicForAdminRequest:
      title: ProfileBasicForAdminRequest
      type: object
      properties:
        profile_id:
          title: Profile Id
          type: string
          description: profile id of the user for update
        email:
          title: Email
          type: string
          description: Email address of the user
          format: email
        name:
          title: Name
          maxLength: 20
          minLength: 2
          type: string
          description: name of the user
        date_of_birth:
          title: Date Of Birth
          type: string
          description: date of birth of the user
          format: date
        gender:
          description: gender of the user
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
        mobile:
          title: Mobile
          type: string
          description: mobile number of the user
        address:
          title: Address
          maxLength: 255
          type: string
          description: address of the user
        designation_id:
          title: Designation Id
          minimum: 1.0
          type: integer
          description: designation id of the given designation or user
          format: int32
        profile_status:
          description: "profile status of the user\n    \n    full_time: 1, part_time:\
            \ 2, delete: 3, inactive: 4\n    "
          allOf:
          - $ref: '#/components/schemas/ProfileStatusEnum'
          default: "4"
        designation_status:
          description: "designation status of user\n    active: 1, inactive: 2\n \
            \   "
          allOf:
          - $ref: '#/components/schemas/DesignationStatusEnum'
          default: "2"
        about:
          title: About
          maxLength: 256
          type: string
          description: description of the user
    ProfileBasicRequest:
      title: ProfileBasicRequest
      type: object
      properties:
        profile_id:
          title: Profile Id
          type: string
          description: profile id of the user for update
        email:
          title: Email
          type: string
          description: Email address of the user
          format: email
        name:
          title: Name
          maxLength: 20
          minLength: 2
          type: string
          description: name of the user
        date_of_birth:
          title: Date Of Birth
          type: string
          description: date of birth of the user
          format: date
        gender:
          description: gender of the user
          allOf:
          - $ref: '#/components/schemas/GenderEnum'
          default: "3"
        mobile:
          title: Mobile
          type: string
          description: mobile number of the user
        address:
          title: Address
          maxLength: 255
          type: string
          description: address of the user
        designation_id:
          title: Designation Id
          minimum: 1.0
          type: integer
          description: designation id of the given designation or user
          format: int32
        about:
          title: About
          maxLength: 256
          type: string
          description: description of the user
    ProfileBasicResponse:
      title: ProfileBasicResponse
      type: object
      properties:
        name:
          title: Name
          maxLength: 20
          minLength: 2
          type: string
          description: name of the user
        id:
          title: Id
          description: id of the user profile
          anyOf:
          - type: string
          - type: string
        url:
          title: Url
          type: string
          description: api endpoint for profile details by id
        email:
          title: Email
          type: string
          description: email address of the user
          format: email
        mobile:
          title: Mobile
          type: string
          description: mobile number of the user
        designation:
          title: Designation
          description: designation basic details of the profile user
          allOf:
          - $ref: '#/components/schemas/DesignationDataResponse'
        skills:
          title: Skills
          type: array
          items:
            $ref: '#/components/schemas/ProfileSkillDataResponse'
      example:
        id: 954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0
        _url: /admin/user-profiles/954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0
        email: developer.ixorasolution@gmail.com
        name: Chelsey Adams
        mobile: +01611123456
        designation:
          designation_id: 1
          designation: Software Engineer
        skills:
        - experience_year: 4
          level: 4
          skill_name: react
          skill_id: 1
        - experience_year: 4
          level: 7
          skill_name: django
          skill_id: 2
    ProfileDesignationResponse:
      title: ProfileDesignationResponse
      type: object
      properties:
        designation:
          title: Designation
          minLength: 2
          type: string
          description: designation of the user
        designation_id:
          title: Designation Id
          minimum: 1.0
          type: integer
          description: id of designation
          format: int32
        start_date:
          title: Start Date
          type: string
          description: start date of designated job
          format: date-time
        end_date:
          title: End Date
          type: string
          description: end date of designated job
          format: date-time
        designation_status:
          title: Designation Status
          description: designation status of designated job
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
    ProfileEducationResponse:
      title: ProfileEducationResponse
      type: object
      properties:
        degree_name:
          title: Degree Name
          maxLength: 30
          type: string
          description: degree name of the user education
        school_name:
          title: School Name
          maxLength: 30
          type: string
          description: school name of the user education
        passing_year:
          title: Passing Year
          maxLength: 4
          type: string
          description: passing year of the user education
        grade:
          title: Grade
          maximum: 5.0
          minimum: 2.5
          type: number
        education_id:
          title: Education Id
          type: integer
          description: id of the user education
          format: int32
    ProfileExperienceDesignationResponse:
      title: ProfileExperienceDesignationResponse
      type: object
      properties:
        designation_id:
          title: Designation Id
          type: integer
          description: designation id for profile experience
          format: int32
        designation:
          title: Designation
          type: string
          description: designation for profile experience
    ProfileExperienceResponse:
      title: ProfileExperienceResponse
      type: object
      properties:
        experience_id:
          title: Experience Id
          minimum: 1.0
          type: integer
          description: autoincrement experience id for this profile
          format: int32
        company_name:
          title: Company Name
          maxLength: 30
          type: string
          description: name of company that user worked on
        job_responsibility:
          title: Job Responsibility
          maxLength: 255
          type: string
          description: responsibility for job on the company
        designation:
          title: Designation
          description: designation for this profile experience
          allOf:
          - $ref: '#/components/schemas/ProfileExperienceDesignationResponse'
        start_date:
          title: Start Date
          type: string
          description: start date of experience
          format: date-time
        end_date:
          title: End Date
          type: string
          description: end date of experience
          format: date-time
        status:
          title: Status
          description: designation status of experience
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
    ProfilePersonalDetailsResponse:
      title: ProfilePersonalDetailsResponse
      type: object
      properties:
        name:
          title: Name
          maxLength: 20
          minLength: 2
          type: string
          description: name of the user
        date_of_birth:
          title: Date Of Birth
          type: string
          description: date of birth of the user
          format: date
        gender:
          title: Gender
          description: gender of the user
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
        mobile:
          title: Mobile
          type: string
          description: mobile number of the user
        address:
          title: Address
          maxLength: 255
          type: string
          description: address of the user
        about:
          title: About
          maxLength: 500
          type: string
          description: about of the user
        experience_year:
          title: Experience Year
          type: integer
          description: experience year of the user
          format: int32
    ProfilePictureUploadResponse:
      title: ProfilePictureUploadResponse
      required:
      - file_id
      - file_name
      - file_size
      - file_type
      - status
      type: object
      properties:
        file_id:
          title: File Id
          type: integer
          description: autoincrement id of the file
          format: int32
        file_name:
          title: File Name
          type: string
          description: name of the file to be uploaded
        file_type:
          title: File Type
          description: type of file to be uploaded
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
        file_size:
          title: File Size
          maximum: 2040.0
          type: integer
          description: file size in KB
          format: int32
        status:
          title: Status
          description: status
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
      example:
        file_id: 2
        file_name: profile_picture_x.jpg
        file_type:
          id: 1
          name: picture
        file_size: 1024
        status:
          id: 1
          name: active
        _file_response_url: /file/2
    ProfileResponse:
      title: ProfileResponse
      required:
      - designation
      - educations
      - experiences
      - skills
      type: object
      properties:
        id:
          title: Id
          type: string
          description: id of the user profile
        email:
          title: Email
          type: string
          description: email address of the user
          format: email
        designation:
          title: Designation
          description: designation details of the profile user
          allOf:
          - $ref: '#/components/schemas/ProfileDesignationResponse'
        skills:
          title: Skills
          type: array
          items:
            $ref: '#/components/schemas/ProfileSkillResponse'
        experiences:
          title: Experiences
          type: array
          items:
            $ref: '#/components/schemas/ProfileExperienceResponse'
        educations:
          title: Educations
          type: array
          items:
            $ref: '#/components/schemas/ProfileEducationResponse'
        personal_details:
          $ref: '#/components/schemas/ProfilePersonalDetailsResponse'
        profile_status:
          title: Profile Status
          description: profile status/ job type of the user
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
      example:
        id: 954eba99-b1ec-4c1f-b5b1-3cc9db9e59e0
        email: developer.ixorasolution@gmail.com
        designation:
          designation: Software Engineer
          designation_id: 1
          start_date: 2022-12-06T13:39:59.971746+00:00
          end_date: 2022-12-07T13:39:59.971754+00:00
          designation_status:
            id: 1
            name: active
        personal_details:
          name: Chelsey Adams
          date_of_birth: 1995-07-21
          gender:
            id: 1
            name: female
          mobile: +01611123456
          address: 'House: X, State:Y, Z, Country'
          about: Personal Information
          experience_year: 4
          _picture_url: /files/2
        skills:
        - skill_id: 1
          skill_name: react
          skill_type:
            id: 1
            name: core_skill
          skill_category:
          - id: 1
            name: frontend
          - id: 2
            name: backend
          experience_year: 4
          number_of_projects: 4
          level: 5
          training_duration: 2
          achievements: "1"
          achievements_description: It is the achievement's description
          certificate: "1"
          status:
            id: 1
            name: active
          certificate_files:
          - file_name: certificate.pdf
            url: /files/1
        experiences:
        - experience_id: 1
          company_name: X Software
          job_responsibility: Backend Development
          designation:
            designation_id: 1
            designation: Software Developer
          start_date: 2020-03-11T13:39:59.971795+00:00
          end_date: 2021-07-24T13:39:59.971800+00:00
          status:
            id: 1
            name: active
        - experience_id: 2
          company_name: Y Software
          job_responsibility: Backend Development
          designation:
            designation_id: 1
            designation: Software Engineer
          start_date: 2021-07-24T13:39:59.971805+00:00
          end_date: 2022-05-20T13:39:59.971808+00:00
          status:
            id: 1
            name: active
        educations:
        - education_id: 2
          degree_name: B.Sc in Computer Science
          school_name: University of Dhaka
          passing_year: "2019"
          grade: 4.0
        - education_id: 1
          degree_name: HSC
          school_name: Dhaka Secondary and Higher Secondary Education Board
          passing_year: "2015"
          grade: 5.0
        profile_status:
          id: 1
          name: full_time
        _latest_cv_url: /file/1
    ProfileSkillDataResponse:
      title: ProfileSkillDataResponse
      type: object
      properties:
        skill_id:
          title: Skill Id
          type: integer
          description: id of skill
          format: int32
        experience_year:
          title: Experience Year
          maximum: 45.0
          type: integer
          description: experience of the indicated skill
          format: int32
        level:
          title: Level
          maximum: 10.0
          minimum: 1.0
          type: integer
          description: level of proficiency on the skill
          format: int32
        skill_name:
          title: Skill Name
          maxLength: 20
          type: string
          description: name of skill from fixed list of values
      example:
        experience_year: 4
        level: 6
        skill_name: react
        skill_id: 1
    ProfileSkillResponse:
      title: ProfileSkillResponse
      required:
      - certificate_files
      type: object
      properties:
        skill_id:
          title: Skill Id
          type: integer
          description: id of skill
          format: int32
        skill_type:
          title: Skill Type
          description: type of skill from fixed list of values
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
        skill_category:
          title: Skill Category
          maxItems: 7
          type: array
          description: category of skill from fixed list of items
          items:
            $ref: '#/components/schemas/ResponseEnumData'
        skill_name:
          title: Skill Name
          maxLength: 20
          type: string
          description: name of skill from fixed list of values
        status:
          title: Status
          description: status of skill from fixed list of values
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
        certificate_files:
          title: Certificate Files
          type: array
          description: file response api url of the certificate files
          items:
            $ref: '#/components/schemas/FileResponse'
        experience_year:
          title: Experience Year
          maximum: 45.0
          type: integer
          description: experience of the indicated skill
          format: int32
        number_of_projects:
          title: Number Of Projects
          maximum: 80.0
          type: integer
          description: number of projects on that skill
          format: int32
        level:
          title: Level
          maximum: 10.0
          minimum: 1.0
          type: integer
          description: level of proficiency on the skill
          format: int32
        training_duration:
          title: Training Duration
          maximum: 100.0
          type: integer
          description: training duration in months
          format: int32
        achievements:
          title: Achievements
          maxLength: 1
          type: string
          description: |-
            marker for having the achievements

                0 or 1
        achievements_description:
          title: Achievements Description
          maxLength: 255
          type: string
          description: description of the achievement
        certificate:
          title: Certificate
          maxLength: 1
          type: string
          description: |-
            marker for having the certificate

                0 or 1
    ProfileStatusEnum:
      title: ProfileStatusEnum
      type: integer
      description: An enumeration.
      format: int32
      enum:
      - 1
      - 2
      - 3
      - 4
    ResponseEnumData:
      title: ResponseEnumData
      type: object
      properties:
        id:
          title: Id
          type: integer
          description: id is enum value
          format: int32
        name:
          title: Name
          type: string
          description: name is enum key
    ResumeUploadResponse:
      title: ResumeUploadResponse
      required:
      - file_id
      - file_name
      - file_size
      - file_type
      - status
      type: object
      properties:
        file_id:
          title: File Id
          type: integer
          description: autoincrement id of the file
          format: int32
        file_name:
          title: File Name
          type: string
          description: name of the file to be uploaded
        file_type:
          title: File Type
          description: type of file to be uploaded
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
        file_size:
          title: File Size
          maximum: 2040.0
          type: integer
          description: file size in KB
          format: int32
        status:
          title: Status
          description: status
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
      example:
        file_id: 1
        file_name: cv_x.pdf
        file_type:
          id: 2
          name: resume
        file_size: 1024
        status:
          id: 1
          name: active
        _file_response_url: /file/1
    SkillCategoryEnum:
      title: SkillCategoryEnum
      type: integer
      description: An enumeration.
      format: int32
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
    SkillCertificateResponse:
      title: SkillCertificateResponse
      type: object
      properties:
        succeed_upload_list:
          title: Succeed Upload List
          type: array
          items:
            type: string
        failed_upload_list:
          title: Failed Upload List
          type: array
          items:
            type: string
    StatusEnum:
      title: StatusEnum
      type: integer
      description: An enumeration.
      format: int32
      enum:
      - 1
      - 2
      - 3
    TaskCreate:
      title: TaskCreate
      type: object
      properties:
        description:
          title: Description
          maxLength: 255
          type: string
          description: description of task
        task_id:
          title: Task Id
          type: integer
          description: 'id of task for plan creation '
          format: int32
        status:
          description: "status of task\n    \n    1: active, 3: delete"
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
    TaskResponse:
      title: TaskResponse
      type: object
      properties:
        description:
          title: Description
          maxLength: 255
          type: string
          description: description of task
        id:
          title: Id
          minimum: 1.0
          type: integer
          description: autoincrement id of task
          format: int32
        status:
          title: Status
          description: status of skill from fixed list of values
          allOf:
          - $ref: '#/components/schemas/ResponseEnumData'
    UserStatusEnum:
      title: UserStatusEnum
      type: integer
      description: An enumeration.
      format: int32
      enum:
      - 1
      - 3
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
              format: int32
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
  securitySchemes:
    JWTBearer:
      type: http
      scheme: bearer
    JWTBearerAdmin:
      type: http
      scheme: bearer
